# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper
from pagarmeapisdk.models.get_recipient_response import GetRecipientResponse
from pagarmeapisdk.models.get_split_options_response import GetSplitOptionsResponse


class GetSplitResponse(object):

    """Implementation of the 'GetSplitResponse' model.

    Split response

    Attributes:
        mtype (string): Type
        amount (int): Amount
        recipient (GetRecipientResponse): Recipient
        gateway_id (string): The split rule gateway id
        options (GetSplitOptionsResponse): TODO: type description here.
        id (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "mtype": 'type',
        "amount": 'amount',
        "gateway_id": 'gateway_id',
        "id": 'id',
        "recipient": 'recipient',
        "options": 'options'
    }

    _optionals = [
        'recipient',
        'options',
    ]

    def __init__(self,
                 mtype=None,
                 amount=None,
                 gateway_id=None,
                 id=None,
                 recipient=APIHelper.SKIP,
                 options=APIHelper.SKIP):
        """Constructor for the GetSplitResponse class"""

        # Initialize members of the class
        self.mtype = mtype 
        self.amount = amount 
        if recipient is not APIHelper.SKIP:
            self.recipient = recipient 
        self.gateway_id = gateway_id 
        if options is not APIHelper.SKIP:
            self.options = options 
        self.id = id 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        mtype = dictionary.get("type") if dictionary.get("type") else None
        amount = dictionary.get("amount") if dictionary.get("amount") else None
        gateway_id = dictionary.get("gateway_id") if dictionary.get("gateway_id") else None
        id = dictionary.get("id") if dictionary.get("id") else None
        recipient = GetRecipientResponse.from_dictionary(dictionary.get('recipient')) if 'recipient' in dictionary.keys() else APIHelper.SKIP 
        options = GetSplitOptionsResponse.from_dictionary(dictionary.get('options')) if 'options' in dictionary.keys() else APIHelper.SKIP 
        # Return an object of this model
        return cls(mtype,
                   amount,
                   gateway_id,
                   id,
                   recipient,
                   options)
