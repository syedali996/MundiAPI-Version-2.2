# -*- coding: utf-8 -*-

"""
pagarmeapisdk

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmeapisdk.api_helper import APIHelper
from pagarmeapisdk.models.create_address_request import CreateAddressRequest


class CreateShippingRequest(object):

    """Implementation of the 'CreateShippingRequest' model.

    Shipping data

    Attributes:
        amount (int): Shipping amount
        description (string): Description
        recipient_name (string): Recipient name
        recipient_phone (string): Recipient phone number
        address_id (string): The id of the address that will be used for
            shipping
        address (CreateAddressRequest): Address data
        max_delivery_date (datetime): Data m√°xima de entrega
        estimated_delivery_date (datetime): Prazo estimado de entrega
        mtype (string): Shipping type

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "amount": 'amount',
        "description": 'description',
        "recipient_name": 'recipient_name',
        "recipient_phone": 'recipient_phone',
        "address_id": 'address_id',
        "address": 'address',
        "mtype": 'type',
        "max_delivery_date": 'max_delivery_date',
        "estimated_delivery_date": 'estimated_delivery_date'
    }

    _optionals = [
        'max_delivery_date',
        'estimated_delivery_date',
    ]

    def __init__(self,
                 amount=None,
                 description=None,
                 recipient_name=None,
                 recipient_phone=None,
                 address_id=None,
                 address=None,
                 mtype=None,
                 max_delivery_date=APIHelper.SKIP,
                 estimated_delivery_date=APIHelper.SKIP):
        """Constructor for the CreateShippingRequest class"""

        # Initialize members of the class
        self.amount = amount 
        self.description = description 
        self.recipient_name = recipient_name 
        self.recipient_phone = recipient_phone 
        self.address_id = address_id 
        self.address = address 
        if max_delivery_date is not APIHelper.SKIP:
            self.max_delivery_date = APIHelper.RFC3339DateTime(max_delivery_date) if max_delivery_date else None 
        if estimated_delivery_date is not APIHelper.SKIP:
            self.estimated_delivery_date = APIHelper.RFC3339DateTime(estimated_delivery_date) if estimated_delivery_date else None 
        self.mtype = mtype 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        amount = dictionary.get("amount") if dictionary.get("amount") else None
        description = dictionary.get("description") if dictionary.get("description") else None
        recipient_name = dictionary.get("recipient_name") if dictionary.get("recipient_name") else None
        recipient_phone = dictionary.get("recipient_phone") if dictionary.get("recipient_phone") else None
        address_id = dictionary.get("address_id") if dictionary.get("address_id") else None
        address = CreateAddressRequest.from_dictionary(dictionary.get('address')) if dictionary.get('address') else None
        mtype = dictionary.get("type") if dictionary.get("type") else None
        max_delivery_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("max_delivery_date")).datetime if dictionary.get("max_delivery_date") else APIHelper.SKIP
        estimated_delivery_date = APIHelper.RFC3339DateTime.from_value(dictionary.get("estimated_delivery_date")).datetime if dictionary.get("estimated_delivery_date") else APIHelper.SKIP
        # Return an object of this model
        return cls(amount,
                   description,
                   recipient_name,
                   recipient_phone,
                   address_id,
                   address,
                   mtype,
                   max_delivery_date,
                   estimated_delivery_date)
