/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetTransfer type.
 */
public class GetTransfer {
    private String id;
    private String gatewayId;
    private int amount;
    private String status;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private Map<String, String> metadata;
    private Integer fee;
    private LocalDateTime fundingDate;
    private LocalDateTime fundingEstimatedDate;
    private String type;
    private GetTransferSourceResponse source;
    private GetTransferTargetResponse target;

    /**
     * Default constructor.
     */
    public GetTransfer() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  gatewayId  String value for gatewayId.
     * @param  amount  int value for amount.
     * @param  status  String value for status.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  type  String value for type.
     * @param  source  GetTransferSourceResponse value for source.
     * @param  target  GetTransferTargetResponse value for target.
     * @param  metadata  Map of String, value for metadata.
     * @param  fee  Integer value for fee.
     * @param  fundingDate  LocalDateTime value for fundingDate.
     * @param  fundingEstimatedDate  LocalDateTime value for fundingEstimatedDate.
     */
    public GetTransfer(
            String id,
            String gatewayId,
            int amount,
            String status,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            String type,
            GetTransferSourceResponse source,
            GetTransferTargetResponse target,
            Map<String, String> metadata,
            Integer fee,
            LocalDateTime fundingDate,
            LocalDateTime fundingEstimatedDate) {
        this.id = id;
        this.gatewayId = gatewayId;
        this.amount = amount;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.metadata = metadata;
        this.fee = fee;
        this.fundingDate = fundingDate;
        this.fundingEstimatedDate = fundingEstimatedDate;
        this.type = type;
        this.source = source;
        this.target = target;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for GatewayId.
     * @return Returns the String
     */
    @JsonGetter("gateway_id")
    public String getGatewayId() {
        return gatewayId;
    }

    /**
     * Setter for GatewayId.
     * @param gatewayId Value for String
     */
    @JsonSetter("gateway_id")
    public void setGatewayId(String gatewayId) {
        this.gatewayId = gatewayId;
    }

    /**
     * Getter for Amount.
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Metadata.
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for Fee.
     * @return Returns the Integer
     */
    @JsonGetter("fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getFee() {
        return fee;
    }

    /**
     * Setter for Fee.
     * @param fee Value for Integer
     */
    @JsonSetter("fee")
    public void setFee(Integer fee) {
        this.fee = fee;
    }

    /**
     * Getter for FundingDate.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("funding_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFundingDate() {
        return fundingDate;
    }

    /**
     * Setter for FundingDate.
     * @param fundingDate Value for LocalDateTime
     */
    @JsonSetter("funding_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFundingDate(LocalDateTime fundingDate) {
        this.fundingDate = fundingDate;
    }

    /**
     * Getter for FundingEstimatedDate.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("funding_estimated_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getFundingEstimatedDate() {
        return fundingEstimatedDate;
    }

    /**
     * Setter for FundingEstimatedDate.
     * @param fundingEstimatedDate Value for LocalDateTime
     */
    @JsonSetter("funding_estimated_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setFundingEstimatedDate(LocalDateTime fundingEstimatedDate) {
        this.fundingEstimatedDate = fundingEstimatedDate;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Source.
     * @return Returns the GetTransferSourceResponse
     */
    @JsonGetter("source")
    public GetTransferSourceResponse getSource() {
        return source;
    }

    /**
     * Setter for Source.
     * @param source Value for GetTransferSourceResponse
     */
    @JsonSetter("source")
    public void setSource(GetTransferSourceResponse source) {
        this.source = source;
    }

    /**
     * Getter for Target.
     * @return Returns the GetTransferTargetResponse
     */
    @JsonGetter("target")
    public GetTransferTargetResponse getTarget() {
        return target;
    }

    /**
     * Setter for Target.
     * @param target Value for GetTransferTargetResponse
     */
    @JsonSetter("target")
    public void setTarget(GetTransferTargetResponse target) {
        this.target = target;
    }

    /**
     * Converts this GetTransfer into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetTransfer [" + "id=" + id + ", gatewayId=" + gatewayId + ", amount=" + amount
                + ", status=" + status + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt
                + ", type=" + type + ", source=" + source + ", target=" + target + ", metadata="
                + metadata + ", fee=" + fee + ", fundingDate=" + fundingDate
                + ", fundingEstimatedDate=" + fundingEstimatedDate + "]";
    }

    /**
     * Builds a new {@link GetTransfer.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetTransfer.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, gatewayId, amount, status, createdAt, updatedAt, type,
                source, target)
                .metadata(getMetadata())
                .fee(getFee())
                .fundingDate(getFundingDate())
                .fundingEstimatedDate(getFundingEstimatedDate());
        return builder;
    }

    /**
     * Class to build instances of {@link GetTransfer}.
     */
    public static class Builder {
        private String id;
        private String gatewayId;
        private int amount;
        private String status;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private String type;
        private GetTransferSourceResponse source;
        private GetTransferTargetResponse target;
        private Map<String, String> metadata;
        private Integer fee;
        private LocalDateTime fundingDate;
        private LocalDateTime fundingEstimatedDate;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  gatewayId  String value for gatewayId.
         * @param  amount  int value for amount.
         * @param  status  String value for status.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  type  String value for type.
         * @param  source  GetTransferSourceResponse value for source.
         * @param  target  GetTransferTargetResponse value for target.
         */
        public Builder(String id, String gatewayId, int amount, String status,
                LocalDateTime createdAt, LocalDateTime updatedAt, String type,
                GetTransferSourceResponse source, GetTransferTargetResponse target) {
            this.id = id;
            this.gatewayId = gatewayId;
            this.amount = amount;
            this.status = status;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.type = type;
            this.source = source;
            this.target = target;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for gatewayId.
         * @param  gatewayId  String value for gatewayId.
         * @return Builder
         */
        public Builder gatewayId(String gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for source.
         * @param  source  GetTransferSourceResponse value for source.
         * @return Builder
         */
        public Builder source(GetTransferSourceResponse source) {
            this.source = source;
            return this;
        }

        /**
         * Setter for target.
         * @param  target  GetTransferTargetResponse value for target.
         * @return Builder
         */
        public Builder target(GetTransferTargetResponse target) {
            this.target = target;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for fee.
         * @param  fee  Integer value for fee.
         * @return Builder
         */
        public Builder fee(Integer fee) {
            this.fee = fee;
            return this;
        }

        /**
         * Setter for fundingDate.
         * @param  fundingDate  LocalDateTime value for fundingDate.
         * @return Builder
         */
        public Builder fundingDate(LocalDateTime fundingDate) {
            this.fundingDate = fundingDate;
            return this;
        }

        /**
         * Setter for fundingEstimatedDate.
         * @param  fundingEstimatedDate  LocalDateTime value for fundingEstimatedDate.
         * @return Builder
         */
        public Builder fundingEstimatedDate(LocalDateTime fundingEstimatedDate) {
            this.fundingEstimatedDate = fundingEstimatedDate;
            return this;
        }

        /**
         * Builds a new {@link GetTransfer} object using the set fields.
         * @return {@link GetTransfer}
         */
        public GetTransfer build() {
            return new GetTransfer(id, gatewayId, amount, status, createdAt, updatedAt, type,
                    source, target, metadata, fee, fundingDate, fundingEstimatedDate);
        }
    }
}
