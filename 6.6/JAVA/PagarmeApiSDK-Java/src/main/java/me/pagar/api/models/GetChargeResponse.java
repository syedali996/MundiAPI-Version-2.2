/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetChargeResponse type.
 */
public class GetChargeResponse {
    private String id;
    private String code;
    private String gatewayId;
    private int amount;
    private String status;
    private String currency;
    private String paymentMethod;
    private LocalDateTime dueAt;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private GetTransactionResponse lastTransaction;
    private GetInvoiceResponse invoice;
    private GetOrderResponse order;
    private GetCustomerResponse customer;
    private Map<String, String> metadata;
    private LocalDateTime paidAt;
    private LocalDateTime canceledAt;
    private int canceledAmount;
    private int paidAmount;
    private Integer interestAndFinePaid;
    private String recurrencyCycle;

    /**
     * Default constructor.
     */
    public GetChargeResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  code  String value for code.
     * @param  gatewayId  String value for gatewayId.
     * @param  amount  int value for amount.
     * @param  status  String value for status.
     * @param  currency  String value for currency.
     * @param  paymentMethod  String value for paymentMethod.
     * @param  dueAt  LocalDateTime value for dueAt.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  metadata  Map of String, value for metadata.
     * @param  canceledAmount  int value for canceledAmount.
     * @param  paidAmount  int value for paidAmount.
     * @param  lastTransaction  GetTransactionResponse value for lastTransaction.
     * @param  invoice  GetInvoiceResponse value for invoice.
     * @param  order  GetOrderResponse value for order.
     * @param  customer  GetCustomerResponse value for customer.
     * @param  paidAt  LocalDateTime value for paidAt.
     * @param  canceledAt  LocalDateTime value for canceledAt.
     * @param  interestAndFinePaid  Integer value for interestAndFinePaid.
     * @param  recurrencyCycle  String value for recurrencyCycle.
     */
    public GetChargeResponse(
            String id,
            String code,
            String gatewayId,
            int amount,
            String status,
            String currency,
            String paymentMethod,
            LocalDateTime dueAt,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            Map<String, String> metadata,
            int canceledAmount,
            int paidAmount,
            GetTransactionResponse lastTransaction,
            GetInvoiceResponse invoice,
            GetOrderResponse order,
            GetCustomerResponse customer,
            LocalDateTime paidAt,
            LocalDateTime canceledAt,
            Integer interestAndFinePaid,
            String recurrencyCycle) {
        this.id = id;
        this.code = code;
        this.gatewayId = gatewayId;
        this.amount = amount;
        this.status = status;
        this.currency = currency;
        this.paymentMethod = paymentMethod;
        this.dueAt = dueAt;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.lastTransaction = lastTransaction;
        this.invoice = invoice;
        this.order = order;
        this.customer = customer;
        this.metadata = metadata;
        this.paidAt = paidAt;
        this.canceledAt = canceledAt;
        this.canceledAmount = canceledAmount;
        this.paidAmount = paidAmount;
        this.interestAndFinePaid = interestAndFinePaid;
        this.recurrencyCycle = recurrencyCycle;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for GatewayId.
     * @return Returns the String
     */
    @JsonGetter("gateway_id")
    public String getGatewayId() {
        return gatewayId;
    }

    /**
     * Setter for GatewayId.
     * @param gatewayId Value for String
     */
    @JsonSetter("gateway_id")
    public void setGatewayId(String gatewayId) {
        this.gatewayId = gatewayId;
    }

    /**
     * Getter for Amount.
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for Currency.
     * @return Returns the String
     */
    @JsonGetter("currency")
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for PaymentMethod.
     * @return Returns the String
     */
    @JsonGetter("payment_method")
    public String getPaymentMethod() {
        return paymentMethod;
    }

    /**
     * Setter for PaymentMethod.
     * @param paymentMethod Value for String
     */
    @JsonSetter("payment_method")
    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    /**
     * Getter for DueAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("due_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDueAt() {
        return dueAt;
    }

    /**
     * Setter for DueAt.
     * @param dueAt Value for LocalDateTime
     */
    @JsonSetter("due_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDueAt(LocalDateTime dueAt) {
        this.dueAt = dueAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for LastTransaction.
     * @return Returns the GetTransactionResponse
     */
    @JsonGetter("last_transaction")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetTransactionResponse getLastTransaction() {
        return lastTransaction;
    }

    /**
     * Setter for LastTransaction.
     * @param lastTransaction Value for GetTransactionResponse
     */
    @JsonSetter("last_transaction")
    public void setLastTransaction(GetTransactionResponse lastTransaction) {
        this.lastTransaction = lastTransaction;
    }

    /**
     * Getter for Invoice.
     * @return Returns the GetInvoiceResponse
     */
    @JsonGetter("invoice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetInvoiceResponse getInvoice() {
        return invoice;
    }

    /**
     * Setter for Invoice.
     * @param invoice Value for GetInvoiceResponse
     */
    @JsonSetter("invoice")
    public void setInvoice(GetInvoiceResponse invoice) {
        this.invoice = invoice;
    }

    /**
     * Getter for Order.
     * @return Returns the GetOrderResponse
     */
    @JsonGetter("order")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetOrderResponse getOrder() {
        return order;
    }

    /**
     * Setter for Order.
     * @param order Value for GetOrderResponse
     */
    @JsonSetter("order")
    public void setOrder(GetOrderResponse order) {
        this.order = order;
    }

    /**
     * Getter for Customer.
     * @return Returns the GetCustomerResponse
     */
    @JsonGetter("customer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetCustomerResponse getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * @param customer Value for GetCustomerResponse
     */
    @JsonSetter("customer")
    public void setCustomer(GetCustomerResponse customer) {
        this.customer = customer;
    }

    /**
     * Getter for Metadata.
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for PaidAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("paid_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getPaidAt() {
        return paidAt;
    }

    /**
     * Setter for PaidAt.
     * @param paidAt Value for LocalDateTime
     */
    @JsonSetter("paid_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setPaidAt(LocalDateTime paidAt) {
        this.paidAt = paidAt;
    }

    /**
     * Getter for CanceledAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("canceled_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCanceledAt() {
        return canceledAt;
    }

    /**
     * Setter for CanceledAt.
     * @param canceledAt Value for LocalDateTime
     */
    @JsonSetter("canceled_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCanceledAt(LocalDateTime canceledAt) {
        this.canceledAt = canceledAt;
    }

    /**
     * Getter for CanceledAmount.
     * Canceled Amount
     * @return Returns the int
     */
    @JsonGetter("canceled_amount")
    public int getCanceledAmount() {
        return canceledAmount;
    }

    /**
     * Setter for CanceledAmount.
     * Canceled Amount
     * @param canceledAmount Value for int
     */
    @JsonSetter("canceled_amount")
    public void setCanceledAmount(int canceledAmount) {
        this.canceledAmount = canceledAmount;
    }

    /**
     * Getter for PaidAmount.
     * Paid amount
     * @return Returns the int
     */
    @JsonGetter("paid_amount")
    public int getPaidAmount() {
        return paidAmount;
    }

    /**
     * Setter for PaidAmount.
     * Paid amount
     * @param paidAmount Value for int
     */
    @JsonSetter("paid_amount")
    public void setPaidAmount(int paidAmount) {
        this.paidAmount = paidAmount;
    }

    /**
     * Getter for InterestAndFinePaid.
     * interest and fine paid
     * @return Returns the Integer
     */
    @JsonGetter("interest_and_fine_paid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getInterestAndFinePaid() {
        return interestAndFinePaid;
    }

    /**
     * Setter for InterestAndFinePaid.
     * interest and fine paid
     * @param interestAndFinePaid Value for Integer
     */
    @JsonSetter("interest_and_fine_paid")
    public void setInterestAndFinePaid(Integer interestAndFinePaid) {
        this.interestAndFinePaid = interestAndFinePaid;
    }

    /**
     * Getter for RecurrencyCycle.
     * Defines whether the card has been used one or more times.
     * @return Returns the String
     */
    @JsonGetter("recurrency_cycle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRecurrencyCycle() {
        return recurrencyCycle;
    }

    /**
     * Setter for RecurrencyCycle.
     * Defines whether the card has been used one or more times.
     * @param recurrencyCycle Value for String
     */
    @JsonSetter("recurrency_cycle")
    public void setRecurrencyCycle(String recurrencyCycle) {
        this.recurrencyCycle = recurrencyCycle;
    }

    /**
     * Converts this GetChargeResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetChargeResponse [" + "id=" + id + ", code=" + code + ", gatewayId=" + gatewayId
                + ", amount=" + amount + ", status=" + status + ", currency=" + currency
                + ", paymentMethod=" + paymentMethod + ", dueAt=" + dueAt + ", createdAt="
                + createdAt + ", updatedAt=" + updatedAt + ", metadata=" + metadata
                + ", canceledAmount=" + canceledAmount + ", paidAmount=" + paidAmount
                + ", lastTransaction=" + lastTransaction + ", invoice=" + invoice + ", order="
                + order + ", customer=" + customer + ", paidAt=" + paidAt + ", canceledAt="
                + canceledAt + ", interestAndFinePaid=" + interestAndFinePaid + ", recurrencyCycle="
                + recurrencyCycle + "]";
    }

    /**
     * Builds a new {@link GetChargeResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetChargeResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, code, gatewayId, amount, status, currency, paymentMethod,
                dueAt, createdAt, updatedAt, metadata, canceledAmount, paidAmount)
                .lastTransaction(getLastTransaction())
                .invoice(getInvoice())
                .order(getOrder())
                .customer(getCustomer())
                .paidAt(getPaidAt())
                .canceledAt(getCanceledAt())
                .interestAndFinePaid(getInterestAndFinePaid())
                .recurrencyCycle(getRecurrencyCycle());
        return builder;
    }

    /**
     * Class to build instances of {@link GetChargeResponse}.
     */
    public static class Builder {
        private String id;
        private String code;
        private String gatewayId;
        private int amount;
        private String status;
        private String currency;
        private String paymentMethod;
        private LocalDateTime dueAt;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private Map<String, String> metadata;
        private int canceledAmount;
        private int paidAmount;
        private GetTransactionResponse lastTransaction;
        private GetInvoiceResponse invoice;
        private GetOrderResponse order;
        private GetCustomerResponse customer;
        private LocalDateTime paidAt;
        private LocalDateTime canceledAt;
        private Integer interestAndFinePaid;
        private String recurrencyCycle;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  code  String value for code.
         * @param  gatewayId  String value for gatewayId.
         * @param  amount  int value for amount.
         * @param  status  String value for status.
         * @param  currency  String value for currency.
         * @param  paymentMethod  String value for paymentMethod.
         * @param  dueAt  LocalDateTime value for dueAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  metadata  Map of String, value for metadata.
         * @param  canceledAmount  int value for canceledAmount.
         * @param  paidAmount  int value for paidAmount.
         */
        public Builder(String id, String code, String gatewayId, int amount, String status,
                String currency, String paymentMethod, LocalDateTime dueAt, LocalDateTime createdAt,
                LocalDateTime updatedAt, Map<String, String> metadata, int canceledAmount,
                int paidAmount) {
            this.id = id;
            this.code = code;
            this.gatewayId = gatewayId;
            this.amount = amount;
            this.status = status;
            this.currency = currency;
            this.paymentMethod = paymentMethod;
            this.dueAt = dueAt;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.metadata = metadata;
            this.canceledAmount = canceledAmount;
            this.paidAmount = paidAmount;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for gatewayId.
         * @param  gatewayId  String value for gatewayId.
         * @return Builder
         */
        public Builder gatewayId(String gatewayId) {
            this.gatewayId = gatewayId;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for paymentMethod.
         * @param  paymentMethod  String value for paymentMethod.
         * @return Builder
         */
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }

        /**
         * Setter for dueAt.
         * @param  dueAt  LocalDateTime value for dueAt.
         * @return Builder
         */
        public Builder dueAt(LocalDateTime dueAt) {
            this.dueAt = dueAt;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for canceledAmount.
         * @param  canceledAmount  int value for canceledAmount.
         * @return Builder
         */
        public Builder canceledAmount(int canceledAmount) {
            this.canceledAmount = canceledAmount;
            return this;
        }

        /**
         * Setter for paidAmount.
         * @param  paidAmount  int value for paidAmount.
         * @return Builder
         */
        public Builder paidAmount(int paidAmount) {
            this.paidAmount = paidAmount;
            return this;
        }

        /**
         * Setter for lastTransaction.
         * @param  lastTransaction  GetTransactionResponse value for lastTransaction.
         * @return Builder
         */
        public Builder lastTransaction(GetTransactionResponse lastTransaction) {
            this.lastTransaction = lastTransaction;
            return this;
        }

        /**
         * Setter for invoice.
         * @param  invoice  GetInvoiceResponse value for invoice.
         * @return Builder
         */
        public Builder invoice(GetInvoiceResponse invoice) {
            this.invoice = invoice;
            return this;
        }

        /**
         * Setter for order.
         * @param  order  GetOrderResponse value for order.
         * @return Builder
         */
        public Builder order(GetOrderResponse order) {
            this.order = order;
            return this;
        }

        /**
         * Setter for customer.
         * @param  customer  GetCustomerResponse value for customer.
         * @return Builder
         */
        public Builder customer(GetCustomerResponse customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for paidAt.
         * @param  paidAt  LocalDateTime value for paidAt.
         * @return Builder
         */
        public Builder paidAt(LocalDateTime paidAt) {
            this.paidAt = paidAt;
            return this;
        }

        /**
         * Setter for canceledAt.
         * @param  canceledAt  LocalDateTime value for canceledAt.
         * @return Builder
         */
        public Builder canceledAt(LocalDateTime canceledAt) {
            this.canceledAt = canceledAt;
            return this;
        }

        /**
         * Setter for interestAndFinePaid.
         * @param  interestAndFinePaid  Integer value for interestAndFinePaid.
         * @return Builder
         */
        public Builder interestAndFinePaid(Integer interestAndFinePaid) {
            this.interestAndFinePaid = interestAndFinePaid;
            return this;
        }

        /**
         * Setter for recurrencyCycle.
         * @param  recurrencyCycle  String value for recurrencyCycle.
         * @return Builder
         */
        public Builder recurrencyCycle(String recurrencyCycle) {
            this.recurrencyCycle = recurrencyCycle;
            return this;
        }

        /**
         * Builds a new {@link GetChargeResponse} object using the set fields.
         * @return {@link GetChargeResponse}
         */
        public GetChargeResponse build() {
            return new GetChargeResponse(id, code, gatewayId, amount, status, currency,
                    paymentMethod, dueAt, createdAt, updatedAt, metadata, canceledAmount,
                    paidAmount, lastTransaction, invoice, order, customer, paidAt, canceledAt,
                    interestAndFinePaid, recurrencyCycle);
        }
    }
}
