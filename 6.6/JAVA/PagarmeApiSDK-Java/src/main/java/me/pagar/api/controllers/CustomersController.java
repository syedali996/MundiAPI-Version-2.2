/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.controllers;

import java.io.IOException;
import me.pagar.api.exceptions.ApiException;
import me.pagar.api.models.CreateAccessTokenRequest;
import me.pagar.api.models.CreateAddressRequest;
import me.pagar.api.models.CreateCardRequest;
import me.pagar.api.models.CreateCustomerRequest;
import me.pagar.api.models.GetAccessTokenResponse;
import me.pagar.api.models.GetAddressResponse;
import me.pagar.api.models.GetCardResponse;
import me.pagar.api.models.GetCustomerResponse;
import me.pagar.api.models.ListAccessTokensResponse;
import me.pagar.api.models.ListAddressesResponse;
import me.pagar.api.models.ListCardsResponse;
import me.pagar.api.models.ListCustomersResponse;
import me.pagar.api.models.UpdateAddressRequest;
import me.pagar.api.models.UpdateCardRequest;
import me.pagar.api.models.UpdateCustomerRequest;
import me.pagar.api.models.UpdateMetadataRequest;

/**
 * This interface lists all the endpoints of the group.
 * This can be overridden for the mock calls.
 */
public interface CustomersController {
    /**
     * Updates a card.
     * @param  customerId  Required parameter: Customer Id
     * @param  cardId  Required parameter: Card id
     * @param  request  Required parameter: Request for updating a card
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCardResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCardResponse updateCard(
            final String customerId,
            final String cardId,
            final UpdateCardRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Updates an address.
     * @param  customerId  Required parameter: Customer Id
     * @param  addressId  Required parameter: Address Id
     * @param  request  Required parameter: Request for updating an address
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetAddressResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAddressResponse updateAddress(
            final String customerId,
            final String addressId,
            final UpdateAddressRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Delete a customer's access token.
     * @param  customerId  Required parameter: Customer Id
     * @param  tokenId  Required parameter: Token Id
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetAccessTokenResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAccessTokenResponse deleteAccessToken(
            final String customerId,
            final String tokenId,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Creates a new customer.
     * @param  request  Required parameter: Request for creating a customer
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCustomerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCustomerResponse createCustomer(
            final CreateCustomerRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Creates a new address for a customer.
     * @param  customerId  Required parameter: Customer Id
     * @param  request  Required parameter: Request for creating an address
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetAddressResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAddressResponse createAddress(
            final String customerId,
            final CreateAddressRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Delete a Customer's access tokens.
     * @param  customerId  Required parameter: Customer Id
     * @return    Returns the ListAccessTokensResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListAccessTokensResponse deleteAccessTokens(
            final String customerId) throws ApiException, IOException;

    /**
     * Get a customer's address.
     * @param  customerId  Required parameter: Customer id
     * @param  addressId  Required parameter: Address Id
     * @return    Returns the GetAddressResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAddressResponse getAddress(
            final String customerId,
            final String addressId) throws ApiException, IOException;

    /**
     * Delete a Customer's address.
     * @param  customerId  Required parameter: Customer Id
     * @param  addressId  Required parameter: Address Id
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetAddressResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAddressResponse deleteAddress(
            final String customerId,
            final String addressId,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Creates a new card for a customer.
     * @param  customerId  Required parameter: Customer id
     * @param  request  Required parameter: Request for creating a card
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCardResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCardResponse createCard(
            final String customerId,
            final CreateCardRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Get all Customers.
     * @param  name  Optional parameter: Name of the Customer
     * @param  document  Optional parameter: Document of the Customer
     * @param  page  Optional parameter: Current page the the search
     * @param  size  Optional parameter: Quantity pages of the search
     * @param  email  Optional parameter: Customer's email
     * @param  code  Optional parameter: Customer's code
     * @return    Returns the ListCustomersResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListCustomersResponse getCustomers(
            final String name,
            final String document,
            final Integer page,
            final Integer size,
            final String email,
            final String code) throws ApiException, IOException;

    /**
     * Updates a customer.
     * @param  customerId  Required parameter: Customer id
     * @param  request  Required parameter: Request for updating a customer
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCustomerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCustomerResponse updateCustomer(
            final String customerId,
            final UpdateCustomerRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Creates a access token for a customer.
     * @param  customerId  Required parameter: Customer Id
     * @param  request  Required parameter: Request for creating a access token
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetAccessTokenResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAccessTokenResponse createAccessToken(
            final String customerId,
            final CreateAccessTokenRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Get all access tokens from a customer.
     * @param  customerId  Required parameter: Customer Id
     * @param  page  Optional parameter: Page number
     * @param  size  Optional parameter: Page size
     * @return    Returns the ListAccessTokensResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListAccessTokensResponse getAccessTokens(
            final String customerId,
            final Integer page,
            final Integer size) throws ApiException, IOException;

    /**
     * Get all cards from a customer.
     * @param  customerId  Required parameter: Customer Id
     * @param  page  Optional parameter: Page number
     * @param  size  Optional parameter: Page size
     * @return    Returns the ListCardsResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListCardsResponse getCards(
            final String customerId,
            final Integer page,
            final Integer size) throws ApiException, IOException;

    /**
     * Renew a card.
     * @param  customerId  Required parameter: Customer id
     * @param  cardId  Required parameter: Card Id
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCardResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCardResponse renewCard(
            final String customerId,
            final String cardId,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Get a Customer's access token.
     * @param  customerId  Required parameter: Customer Id
     * @param  tokenId  Required parameter: Token Id
     * @return    Returns the GetAccessTokenResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetAccessTokenResponse getAccessToken(
            final String customerId,
            final String tokenId) throws ApiException, IOException;

    /**
     * Updates the metadata a customer.
     * @param  customerId  Required parameter: The customer id
     * @param  request  Required parameter: Request for updating the customer metadata
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCustomerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCustomerResponse updateCustomerMetadata(
            final String customerId,
            final UpdateMetadataRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Delete a customer's card.
     * @param  customerId  Required parameter: Customer Id
     * @param  cardId  Required parameter: Card Id
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetCardResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCardResponse deleteCard(
            final String customerId,
            final String cardId,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * Gets all adressess from a customer.
     * @param  customerId  Required parameter: Customer id
     * @param  page  Optional parameter: Page number
     * @param  size  Optional parameter: Page size
     * @return    Returns the ListAddressesResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListAddressesResponse getAddresses(
            final String customerId,
            final Integer page,
            final Integer size) throws ApiException, IOException;

    /**
     * Get a customer.
     * @param  customerId  Required parameter: Customer Id
     * @return    Returns the GetCustomerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCustomerResponse getCustomer(
            final String customerId) throws ApiException, IOException;

    /**
     * Get a customer's card.
     * @param  customerId  Required parameter: Customer id
     * @param  cardId  Required parameter: Card id
     * @return    Returns the GetCardResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetCardResponse getCard(
            final String customerId,
            final String cardId) throws ApiException, IOException;

}