/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for CreateOrderRequest type.
 */
public class CreateOrderRequest {
    private List<CreateOrderItemRequest> items;
    private CreateCustomerRequest customer;
    private List<CreatePaymentRequest> payments;
    private String code;
    private String customerId;
    private CreateShippingRequest shipping;
    private Map<String, String> metadata;
    private Boolean antifraudEnabled;
    private String ip;
    private String sessionId;
    private CreateLocationRequest location;
    private CreateDeviceRequest device;
    private boolean closed;
    private String currency;
    private CreateAntifraudRequest antifraud;
    private CreateSubMerchantRequest submerchant;

    /**
     * Default constructor.
     */
    public CreateOrderRequest() {
        closed = true;
    }

    /**
     * Initialization constructor.
     * @param  items  List of CreateOrderItemRequest value for items.
     * @param  customer  CreateCustomerRequest value for customer.
     * @param  payments  List of CreatePaymentRequest value for payments.
     * @param  code  String value for code.
     * @param  customerId  String value for customerId.
     * @param  metadata  Map of String, value for metadata.
     * @param  closed  boolean value for closed.
     * @param  shipping  CreateShippingRequest value for shipping.
     * @param  antifraudEnabled  Boolean value for antifraudEnabled.
     * @param  ip  String value for ip.
     * @param  sessionId  String value for sessionId.
     * @param  location  CreateLocationRequest value for location.
     * @param  device  CreateDeviceRequest value for device.
     * @param  currency  String value for currency.
     * @param  antifraud  CreateAntifraudRequest value for antifraud.
     * @param  submerchant  CreateSubMerchantRequest value for submerchant.
     */
    public CreateOrderRequest(
            List<CreateOrderItemRequest> items,
            CreateCustomerRequest customer,
            List<CreatePaymentRequest> payments,
            String code,
            String customerId,
            Map<String, String> metadata,
            boolean closed,
            CreateShippingRequest shipping,
            Boolean antifraudEnabled,
            String ip,
            String sessionId,
            CreateLocationRequest location,
            CreateDeviceRequest device,
            String currency,
            CreateAntifraudRequest antifraud,
            CreateSubMerchantRequest submerchant) {
        this.items = items;
        this.customer = customer;
        this.payments = payments;
        this.code = code;
        this.customerId = customerId;
        this.shipping = shipping;
        this.metadata = metadata;
        this.antifraudEnabled = antifraudEnabled;
        this.ip = ip;
        this.sessionId = sessionId;
        this.location = location;
        this.device = device;
        this.closed = closed;
        this.currency = currency;
        this.antifraud = antifraud;
        this.submerchant = submerchant;
    }

    /**
     * Getter for Items.
     * Items
     * @return Returns the List of CreateOrderItemRequest
     */
    @JsonGetter("items")
    public List<CreateOrderItemRequest> getItems() {
        return items;
    }

    /**
     * Setter for Items.
     * Items
     * @param items Value for List of CreateOrderItemRequest
     */
    @JsonSetter("items")
    public void setItems(List<CreateOrderItemRequest> items) {
        this.items = items;
    }

    /**
     * Getter for Customer.
     * Customer
     * @return Returns the CreateCustomerRequest
     */
    @JsonGetter("customer")
    public CreateCustomerRequest getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * Customer
     * @param customer Value for CreateCustomerRequest
     */
    @JsonSetter("customer")
    public void setCustomer(CreateCustomerRequest customer) {
        this.customer = customer;
    }

    /**
     * Getter for Payments.
     * Payment data
     * @return Returns the List of CreatePaymentRequest
     */
    @JsonGetter("payments")
    public List<CreatePaymentRequest> getPayments() {
        return payments;
    }

    /**
     * Setter for Payments.
     * Payment data
     * @param payments Value for List of CreatePaymentRequest
     */
    @JsonSetter("payments")
    public void setPayments(List<CreatePaymentRequest> payments) {
        this.payments = payments;
    }

    /**
     * Getter for Code.
     * The order code
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * The order code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for CustomerId.
     * The customer id
     * @return Returns the String
     */
    @JsonGetter("customer_id")
    public String getCustomerId() {
        return customerId;
    }

    /**
     * Setter for CustomerId.
     * The customer id
     * @param customerId Value for String
     */
    @JsonSetter("customer_id")
    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for Shipping.
     * Shipping data
     * @return Returns the CreateShippingRequest
     */
    @JsonGetter("shipping")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateShippingRequest getShipping() {
        return shipping;
    }

    /**
     * Setter for Shipping.
     * Shipping data
     * @param shipping Value for CreateShippingRequest
     */
    @JsonSetter("shipping")
    public void setShipping(CreateShippingRequest shipping) {
        this.shipping = shipping;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for AntifraudEnabled.
     * Defines whether the order will go through anti-fraud
     * @return Returns the Boolean
     */
    @JsonGetter("antifraud_enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAntifraudEnabled() {
        return antifraudEnabled;
    }

    /**
     * Setter for AntifraudEnabled.
     * Defines whether the order will go through anti-fraud
     * @param antifraudEnabled Value for Boolean
     */
    @JsonSetter("antifraud_enabled")
    public void setAntifraudEnabled(Boolean antifraudEnabled) {
        this.antifraudEnabled = antifraudEnabled;
    }

    /**
     * Getter for Ip.
     * Ip address
     * @return Returns the String
     */
    @JsonGetter("ip")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIp() {
        return ip;
    }

    /**
     * Setter for Ip.
     * Ip address
     * @param ip Value for String
     */
    @JsonSetter("ip")
    public void setIp(String ip) {
        this.ip = ip;
    }

    /**
     * Getter for SessionId.
     * Session id
     * @return Returns the String
     */
    @JsonGetter("session_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSessionId() {
        return sessionId;
    }

    /**
     * Setter for SessionId.
     * Session id
     * @param sessionId Value for String
     */
    @JsonSetter("session_id")
    public void setSessionId(String sessionId) {
        this.sessionId = sessionId;
    }

    /**
     * Getter for Location.
     * Request's location
     * @return Returns the CreateLocationRequest
     */
    @JsonGetter("location")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateLocationRequest getLocation() {
        return location;
    }

    /**
     * Setter for Location.
     * Request's location
     * @param location Value for CreateLocationRequest
     */
    @JsonSetter("location")
    public void setLocation(CreateLocationRequest location) {
        this.location = location;
    }

    /**
     * Getter for Device.
     * Device's informations
     * @return Returns the CreateDeviceRequest
     */
    @JsonGetter("device")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateDeviceRequest getDevice() {
        return device;
    }

    /**
     * Setter for Device.
     * Device's informations
     * @param device Value for CreateDeviceRequest
     */
    @JsonSetter("device")
    public void setDevice(CreateDeviceRequest device) {
        this.device = device;
    }

    /**
     * Getter for Closed.
     * @return Returns the boolean
     */
    @JsonGetter("closed")
    public boolean getClosed() {
        return closed;
    }

    /**
     * Setter for Closed.
     * @param closed Value for boolean
     */
    @JsonSetter("closed")
    public void setClosed(boolean closed) {
        this.closed = closed;
    }

    /**
     * Getter for Currency.
     * Currency
     * @return Returns the String
     */
    @JsonGetter("currency")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for Antifraud.
     * @return Returns the CreateAntifraudRequest
     */
    @JsonGetter("antifraud")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateAntifraudRequest getAntifraud() {
        return antifraud;
    }

    /**
     * Setter for Antifraud.
     * @param antifraud Value for CreateAntifraudRequest
     */
    @JsonSetter("antifraud")
    public void setAntifraud(CreateAntifraudRequest antifraud) {
        this.antifraud = antifraud;
    }

    /**
     * Getter for Submerchant.
     * SubMerchant
     * @return Returns the CreateSubMerchantRequest
     */
    @JsonGetter("submerchant")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateSubMerchantRequest getSubmerchant() {
        return submerchant;
    }

    /**
     * Setter for Submerchant.
     * SubMerchant
     * @param submerchant Value for CreateSubMerchantRequest
     */
    @JsonSetter("submerchant")
    public void setSubmerchant(CreateSubMerchantRequest submerchant) {
        this.submerchant = submerchant;
    }

    /**
     * Converts this CreateOrderRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateOrderRequest [" + "items=" + items + ", customer=" + customer + ", payments="
                + payments + ", code=" + code + ", customerId=" + customerId + ", metadata="
                + metadata + ", closed=" + closed + ", shipping=" + shipping + ", antifraudEnabled="
                + antifraudEnabled + ", ip=" + ip + ", sessionId=" + sessionId + ", location="
                + location + ", device=" + device + ", currency=" + currency + ", antifraud="
                + antifraud + ", submerchant=" + submerchant + "]";
    }

    /**
     * Builds a new {@link CreateOrderRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateOrderRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(items, customer, payments, code, customerId, metadata, closed)
                .shipping(getShipping())
                .antifraudEnabled(getAntifraudEnabled())
                .ip(getIp())
                .sessionId(getSessionId())
                .location(getLocation())
                .device(getDevice())
                .currency(getCurrency())
                .antifraud(getAntifraud())
                .submerchant(getSubmerchant());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateOrderRequest}.
     */
    public static class Builder {
        private List<CreateOrderItemRequest> items;
        private CreateCustomerRequest customer;
        private List<CreatePaymentRequest> payments;
        private String code;
        private String customerId;
        private Map<String, String> metadata;
        private boolean closed = true;
        private CreateShippingRequest shipping;
        private Boolean antifraudEnabled;
        private String ip;
        private String sessionId;
        private CreateLocationRequest location;
        private CreateDeviceRequest device;
        private String currency;
        private CreateAntifraudRequest antifraud;
        private CreateSubMerchantRequest submerchant;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  items  List of CreateOrderItemRequest value for items.
         * @param  customer  CreateCustomerRequest value for customer.
         * @param  payments  List of CreatePaymentRequest value for payments.
         * @param  code  String value for code.
         * @param  customerId  String value for customerId.
         * @param  metadata  Map of String, value for metadata.
         * @param  closed  boolean value for closed.
         */
        public Builder(List<CreateOrderItemRequest> items, CreateCustomerRequest customer,
                List<CreatePaymentRequest> payments, String code, String customerId,
                Map<String, String> metadata, boolean closed) {
            this.items = items;
            this.customer = customer;
            this.payments = payments;
            this.code = code;
            this.customerId = customerId;
            this.metadata = metadata;
            this.closed = closed;
        }

        /**
         * Setter for items.
         * @param  items  List of CreateOrderItemRequest value for items.
         * @return Builder
         */
        public Builder items(List<CreateOrderItemRequest> items) {
            this.items = items;
            return this;
        }

        /**
         * Setter for customer.
         * @param  customer  CreateCustomerRequest value for customer.
         * @return Builder
         */
        public Builder customer(CreateCustomerRequest customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for payments.
         * @param  payments  List of CreatePaymentRequest value for payments.
         * @return Builder
         */
        public Builder payments(List<CreatePaymentRequest> payments) {
            this.payments = payments;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  String value for customerId.
         * @return Builder
         */
        public Builder customerId(String customerId) {
            this.customerId = customerId;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for closed.
         * @param  closed  boolean value for closed.
         * @return Builder
         */
        public Builder closed(boolean closed) {
            this.closed = closed;
            return this;
        }

        /**
         * Setter for shipping.
         * @param  shipping  CreateShippingRequest value for shipping.
         * @return Builder
         */
        public Builder shipping(CreateShippingRequest shipping) {
            this.shipping = shipping;
            return this;
        }

        /**
         * Setter for antifraudEnabled.
         * @param  antifraudEnabled  Boolean value for antifraudEnabled.
         * @return Builder
         */
        public Builder antifraudEnabled(Boolean antifraudEnabled) {
            this.antifraudEnabled = antifraudEnabled;
            return this;
        }

        /**
         * Setter for ip.
         * @param  ip  String value for ip.
         * @return Builder
         */
        public Builder ip(String ip) {
            this.ip = ip;
            return this;
        }

        /**
         * Setter for sessionId.
         * @param  sessionId  String value for sessionId.
         * @return Builder
         */
        public Builder sessionId(String sessionId) {
            this.sessionId = sessionId;
            return this;
        }

        /**
         * Setter for location.
         * @param  location  CreateLocationRequest value for location.
         * @return Builder
         */
        public Builder location(CreateLocationRequest location) {
            this.location = location;
            return this;
        }

        /**
         * Setter for device.
         * @param  device  CreateDeviceRequest value for device.
         * @return Builder
         */
        public Builder device(CreateDeviceRequest device) {
            this.device = device;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for antifraud.
         * @param  antifraud  CreateAntifraudRequest value for antifraud.
         * @return Builder
         */
        public Builder antifraud(CreateAntifraudRequest antifraud) {
            this.antifraud = antifraud;
            return this;
        }

        /**
         * Setter for submerchant.
         * @param  submerchant  CreateSubMerchantRequest value for submerchant.
         * @return Builder
         */
        public Builder submerchant(CreateSubMerchantRequest submerchant) {
            this.submerchant = submerchant;
            return this;
        }

        /**
         * Builds a new {@link CreateOrderRequest} object using the set fields.
         * @return {@link CreateOrderRequest}
         */
        public CreateOrderRequest build() {
            return new CreateOrderRequest(items, customer, payments, code, customerId, metadata,
                    closed, shipping, antifraudEnabled, ip, sessionId, location, device, currency,
                    antifraud, submerchant);
        }
    }
}
