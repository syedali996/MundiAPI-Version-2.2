<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\TemplateParam;
use CoreInterfaces\Core\Request\RequestMethod;
use PagarmeApiSDKLib\Exceptions\ApiException;
use PagarmeApiSDKLib\Models\CreateTransfer;
use PagarmeApiSDKLib\Models\GetTransfer;
use PagarmeApiSDKLib\Models\ListTransfers;

class TransfersController extends BaseController
{
    /**
     * @param string $transferId
     *
     * @return GetTransfer Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getTransferById(string $transferId): GetTransfer
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/transfers/{transfer_id}')
            ->auth('global')
            ->parameters(TemplateParam::init('transfer_id', $transferId));

        $_resHandler = $this->responseHandler()->type(GetTransfer::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param CreateTransfer $request
     *
     * @return GetTransfer Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function createTransfer(CreateTransfer $request): GetTransfer
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/transfers/recipients')
            ->auth('global')
            ->parameters(BodyParam::init($request));

        $_resHandler = $this->responseHandler()->type(GetTransfer::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Gets all transfers
     *
     * @return ListTransfers Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getTransfers(): ListTransfers
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/transfers')->auth('global');

        $_resHandler = $this->responseHandler()->type(ListTransfers::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
