<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

/**
 * Request for creating a new charge
 */
class CreateChargeRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $code;

    /**
     * @var int
     */
    private $amount;

    /**
     * @var string
     */
    private $customerId;

    /**
     * @var CreateCustomerRequest
     */
    private $customer;

    /**
     * @var CreatePaymentRequest
     */
    private $payment;

    /**
     * @var array<string,string>
     */
    private $metadata;

    /**
     * @var \DateTime|null
     */
    private $dueAt;

    /**
     * @var CreateAntifraudRequest
     */
    private $antifraud;

    /**
     * @var string
     */
    private $orderId;

    /**
     * @param string $code
     * @param int $amount
     * @param string $customerId
     * @param CreateCustomerRequest $customer
     * @param CreatePaymentRequest $payment
     * @param array<string,string> $metadata
     * @param CreateAntifraudRequest $antifraud
     * @param string $orderId
     */
    public function __construct(
        string $code,
        int $amount,
        string $customerId,
        CreateCustomerRequest $customer,
        CreatePaymentRequest $payment,
        array $metadata,
        CreateAntifraudRequest $antifraud,
        string $orderId
    ) {
        $this->code = $code;
        $this->amount = $amount;
        $this->customerId = $customerId;
        $this->customer = $customer;
        $this->payment = $payment;
        $this->metadata = $metadata;
        $this->antifraud = $antifraud;
        $this->orderId = $orderId;
    }

    /**
     * Returns Code.
     * Code
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * Code
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Amount.
     * The amount of the charge, in cents
     */
    public function getAmount(): int
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     * The amount of the charge, in cents
     *
     * @required
     * @maps amount
     */
    public function setAmount(int $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Customer Id.
     * The customer's id
     */
    public function getCustomerId(): string
    {
        return $this->customerId;
    }

    /**
     * Sets Customer Id.
     * The customer's id
     *
     * @required
     * @maps customer_id
     */
    public function setCustomerId(string $customerId): void
    {
        $this->customerId = $customerId;
    }

    /**
     * Returns Customer.
     * Customer data
     */
    public function getCustomer(): CreateCustomerRequest
    {
        return $this->customer;
    }

    /**
     * Sets Customer.
     * Customer data
     *
     * @required
     * @maps customer
     */
    public function setCustomer(CreateCustomerRequest $customer): void
    {
        $this->customer = $customer;
    }

    /**
     * Returns Payment.
     * Payment data
     */
    public function getPayment(): CreatePaymentRequest
    {
        return $this->payment;
    }

    /**
     * Sets Payment.
     * Payment data
     *
     * @required
     * @maps payment
     */
    public function setPayment(CreatePaymentRequest $payment): void
    {
        $this->payment = $payment;
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @required
     * @maps metadata
     *
     * @param array<string,string> $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Due At.
     * The charge due date
     */
    public function getDueAt(): ?\DateTime
    {
        return $this->dueAt;
    }

    /**
     * Sets Due At.
     * The charge due date
     *
     * @maps due_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDueAt(?\DateTime $dueAt): void
    {
        $this->dueAt = $dueAt;
    }

    /**
     * Returns Antifraud.
     */
    public function getAntifraud(): CreateAntifraudRequest
    {
        return $this->antifraud;
    }

    /**
     * Sets Antifraud.
     *
     * @required
     * @maps antifraud
     */
    public function setAntifraud(CreateAntifraudRequest $antifraud): void
    {
        $this->antifraud = $antifraud;
    }

    /**
     * Returns Order Id.
     * Order Id
     */
    public function getOrderId(): string
    {
        return $this->orderId;
    }

    /**
     * Sets Order Id.
     * Order Id
     *
     * @required
     * @maps order_id
     */
    public function setOrderId(string $orderId): void
    {
        $this->orderId = $orderId;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['code']        = $this->code;
        $json['amount']      = $this->amount;
        $json['customer_id'] = $this->customerId;
        $json['customer']    = $this->customer;
        $json['payment']     = $this->payment;
        $json['metadata']    = $this->metadata;
        if (isset($this->dueAt)) {
            $json['due_at']  = DateTimeHelper::toRfc3339DateTime($this->dueAt);
        }
        $json['antifraud']   = $this->antifraud;
        $json['order_id']    = $this->orderId;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
