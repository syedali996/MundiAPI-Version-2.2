<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Request for canceling a charge.
 */
class CreateCancelChargeRequest implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $amount;

    /**
     * @var CreateCancelChargeSplitRulesRequest[]|null
     */
    private $splitRules;

    /**
     * @var CreateSplitRequest[]|null
     */
    private $split;

    /**
     * @var string
     */
    private $operationReference;

    /**
     * @param string $operationReference
     */
    public function __construct(string $operationReference)
    {
        $this->operationReference = $operationReference;
    }

    /**
     * Returns Amount.
     * The amount that will be canceled.
     */
    public function getAmount(): ?int
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     * The amount that will be canceled.
     *
     * @maps amount
     */
    public function setAmount(?int $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Split Rules.
     * The split rules request
     *
     * @return CreateCancelChargeSplitRulesRequest[]|null
     */
    public function getSplitRules(): ?array
    {
        return $this->splitRules;
    }

    /**
     * Sets Split Rules.
     * The split rules request
     *
     * @maps split_rules
     *
     * @param CreateCancelChargeSplitRulesRequest[]|null $splitRules
     */
    public function setSplitRules(?array $splitRules): void
    {
        $this->splitRules = $splitRules;
    }

    /**
     * Returns Split.
     * Splits
     *
     * @return CreateSplitRequest[]|null
     */
    public function getSplit(): ?array
    {
        return $this->split;
    }

    /**
     * Sets Split.
     * Splits
     *
     * @maps split
     *
     * @param CreateSplitRequest[]|null $split
     */
    public function setSplit(?array $split): void
    {
        $this->split = $split;
    }

    /**
     * Returns Operation Reference.
     */
    public function getOperationReference(): string
    {
        return $this->operationReference;
    }

    /**
     * Sets Operation Reference.
     *
     * @required
     * @maps operation_reference
     */
    public function setOperationReference(string $operationReference): void
    {
        $this->operationReference = $operationReference;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->amount)) {
            $json['amount']          = $this->amount;
        }
        if (isset($this->splitRules)) {
            $json['split_rules']     = $this->splitRules;
        }
        if (isset($this->split)) {
            $json['split']           = $this->split;
        }
        $json['operation_reference'] = $this->operationReference;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
