<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use stdClass;

/**
 * Request for creating an order
 */
class CreateOrderRequest implements \JsonSerializable
{
    /**
     * @var CreateOrderItemRequest[]
     */
    private $items;

    /**
     * @var CreateCustomerRequest
     */
    private $customer;

    /**
     * @var CreatePaymentRequest[]
     */
    private $payments;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $customerId;

    /**
     * @var CreateShippingRequest|null
     */
    private $shipping;

    /**
     * @var array<string,string>
     */
    private $metadata;

    /**
     * @var bool|null
     */
    private $antifraudEnabled;

    /**
     * @var string|null
     */
    private $ip;

    /**
     * @var string|null
     */
    private $sessionId;

    /**
     * @var CreateLocationRequest|null
     */
    private $location;

    /**
     * @var CreateDeviceRequest|null
     */
    private $device;

    /**
     * @var bool
     */
    private $closed;

    /**
     * @var string|null
     */
    private $currency;

    /**
     * @var CreateAntifraudRequest|null
     */
    private $antifraud;

    /**
     * @var CreateSubMerchantRequest|null
     */
    private $submerchant;

    /**
     * @param CreateOrderItemRequest[] $items
     * @param CreateCustomerRequest $customer
     * @param CreatePaymentRequest[] $payments
     * @param string $code
     * @param string $customerId
     * @param array<string,string> $metadata
     * @param bool $closed
     */
    public function __construct(
        array $items,
        CreateCustomerRequest $customer,
        array $payments,
        string $code,
        string $customerId,
        array $metadata,
        bool $closed
    ) {
        $this->items = $items;
        $this->customer = $customer;
        $this->payments = $payments;
        $this->code = $code;
        $this->customerId = $customerId;
        $this->metadata = $metadata;
        $this->closed = $closed;
    }

    /**
     * Returns Items.
     * Items
     *
     * @return CreateOrderItemRequest[]
     */
    public function getItems(): array
    {
        return $this->items;
    }

    /**
     * Sets Items.
     * Items
     *
     * @required
     * @maps items
     *
     * @param CreateOrderItemRequest[] $items
     */
    public function setItems(array $items): void
    {
        $this->items = $items;
    }

    /**
     * Returns Customer.
     * Customer
     */
    public function getCustomer(): CreateCustomerRequest
    {
        return $this->customer;
    }

    /**
     * Sets Customer.
     * Customer
     *
     * @required
     * @maps customer
     */
    public function setCustomer(CreateCustomerRequest $customer): void
    {
        $this->customer = $customer;
    }

    /**
     * Returns Payments.
     * Payment data
     *
     * @return CreatePaymentRequest[]
     */
    public function getPayments(): array
    {
        return $this->payments;
    }

    /**
     * Sets Payments.
     * Payment data
     *
     * @required
     * @maps payments
     *
     * @param CreatePaymentRequest[] $payments
     */
    public function setPayments(array $payments): void
    {
        $this->payments = $payments;
    }

    /**
     * Returns Code.
     * The order code
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * The order code
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Customer Id.
     * The customer id
     */
    public function getCustomerId(): string
    {
        return $this->customerId;
    }

    /**
     * Sets Customer Id.
     * The customer id
     *
     * @required
     * @maps customer_id
     */
    public function setCustomerId(string $customerId): void
    {
        $this->customerId = $customerId;
    }

    /**
     * Returns Shipping.
     * Shipping data
     */
    public function getShipping(): ?CreateShippingRequest
    {
        return $this->shipping;
    }

    /**
     * Sets Shipping.
     * Shipping data
     *
     * @maps shipping
     */
    public function setShipping(?CreateShippingRequest $shipping): void
    {
        $this->shipping = $shipping;
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @required
     * @maps metadata
     *
     * @param array<string,string> $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Antifraud Enabled.
     * Defines whether the order will go through anti-fraud
     */
    public function getAntifraudEnabled(): ?bool
    {
        return $this->antifraudEnabled;
    }

    /**
     * Sets Antifraud Enabled.
     * Defines whether the order will go through anti-fraud
     *
     * @maps antifraud_enabled
     */
    public function setAntifraudEnabled(?bool $antifraudEnabled): void
    {
        $this->antifraudEnabled = $antifraudEnabled;
    }

    /**
     * Returns Ip.
     * Ip address
     */
    public function getIp(): ?string
    {
        return $this->ip;
    }

    /**
     * Sets Ip.
     * Ip address
     *
     * @maps ip
     */
    public function setIp(?string $ip): void
    {
        $this->ip = $ip;
    }

    /**
     * Returns Session Id.
     * Session id
     */
    public function getSessionId(): ?string
    {
        return $this->sessionId;
    }

    /**
     * Sets Session Id.
     * Session id
     *
     * @maps session_id
     */
    public function setSessionId(?string $sessionId): void
    {
        $this->sessionId = $sessionId;
    }

    /**
     * Returns Location.
     * Request's location
     */
    public function getLocation(): ?CreateLocationRequest
    {
        return $this->location;
    }

    /**
     * Sets Location.
     * Request's location
     *
     * @maps location
     */
    public function setLocation(?CreateLocationRequest $location): void
    {
        $this->location = $location;
    }

    /**
     * Returns Device.
     * Device's informations
     */
    public function getDevice(): ?CreateDeviceRequest
    {
        return $this->device;
    }

    /**
     * Sets Device.
     * Device's informations
     *
     * @maps device
     */
    public function setDevice(?CreateDeviceRequest $device): void
    {
        $this->device = $device;
    }

    /**
     * Returns Closed.
     */
    public function getClosed(): bool
    {
        return $this->closed;
    }

    /**
     * Sets Closed.
     *
     * @required
     * @maps closed
     */
    public function setClosed(bool $closed): void
    {
        $this->closed = $closed;
    }

    /**
     * Returns Currency.
     * Currency
     */
    public function getCurrency(): ?string
    {
        return $this->currency;
    }

    /**
     * Sets Currency.
     * Currency
     *
     * @maps currency
     */
    public function setCurrency(?string $currency): void
    {
        $this->currency = $currency;
    }

    /**
     * Returns Antifraud.
     */
    public function getAntifraud(): ?CreateAntifraudRequest
    {
        return $this->antifraud;
    }

    /**
     * Sets Antifraud.
     *
     * @maps antifraud
     */
    public function setAntifraud(?CreateAntifraudRequest $antifraud): void
    {
        $this->antifraud = $antifraud;
    }

    /**
     * Returns Submerchant.
     * SubMerchant
     */
    public function getSubmerchant(): ?CreateSubMerchantRequest
    {
        return $this->submerchant;
    }

    /**
     * Sets Submerchant.
     * SubMerchant
     *
     * @maps submerchant
     */
    public function setSubmerchant(?CreateSubMerchantRequest $submerchant): void
    {
        $this->submerchant = $submerchant;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['items']                 = $this->items;
        $json['customer']              = $this->customer;
        $json['payments']              = $this->payments;
        $json['code']                  = $this->code;
        $json['customer_id']           = $this->customerId;
        if (isset($this->shipping)) {
            $json['shipping']          = $this->shipping;
        }
        $json['metadata']              = $this->metadata;
        if (isset($this->antifraudEnabled)) {
            $json['antifraud_enabled'] = $this->antifraudEnabled;
        }
        if (isset($this->ip)) {
            $json['ip']                = $this->ip;
        }
        if (isset($this->sessionId)) {
            $json['session_id']        = $this->sessionId;
        }
        if (isset($this->location)) {
            $json['location']          = $this->location;
        }
        if (isset($this->device)) {
            $json['device']            = $this->device;
        }
        $json['closed']                = $this->closed;
        if (isset($this->currency)) {
            $json['currency']          = $this->currency;
        }
        if (isset($this->antifraud)) {
            $json['antifraud']         = $this->antifraud;
        }
        if (isset($this->submerchant)) {
            $json['submerchant']       = $this->submerchant;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
