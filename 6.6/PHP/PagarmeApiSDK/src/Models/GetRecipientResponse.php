<?php

declare(strict_types=1);

/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace PagarmeApiSDKLib\Models;

use PagarmeApiSDKLib\Utils\DateTimeHelper;
use stdClass;

/**
 * Recipient response
 */
class GetRecipientResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $email;

    /**
     * @var string
     */
    private $document;

    /**
     * @var string
     */
    private $description;

    /**
     * @var string
     */
    private $type;

    /**
     * @var string
     */
    private $status;

    /**
     * @var \DateTime
     */
    private $createdAt;

    /**
     * @var \DateTime
     */
    private $updatedAt;

    /**
     * @var \DateTime
     */
    private $deletedAt;

    /**
     * @var GetBankAccountResponse
     */
    private $defaultBankAccount;

    /**
     * @var GetGatewayRecipientResponse[]
     */
    private $gatewayRecipients;

    /**
     * @var array<string,string>
     */
    private $metadata;

    /**
     * @var GetAutomaticAnticipationResponse|null
     */
    private $automaticAnticipationSettings;

    /**
     * @var GetTransferSettingsResponse|null
     */
    private $transferSettings;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $paymentMode;

    /**
     * @param string $id
     * @param string $name
     * @param string $email
     * @param string $document
     * @param string $description
     * @param string $type
     * @param string $status
     * @param \DateTime $createdAt
     * @param \DateTime $updatedAt
     * @param \DateTime $deletedAt
     * @param GetBankAccountResponse $defaultBankAccount
     * @param GetGatewayRecipientResponse[] $gatewayRecipients
     * @param array<string,string> $metadata
     * @param string $code
     * @param string $paymentMode
     */
    public function __construct(
        string $id,
        string $name,
        string $email,
        string $document,
        string $description,
        string $type,
        string $status,
        \DateTime $createdAt,
        \DateTime $updatedAt,
        \DateTime $deletedAt,
        GetBankAccountResponse $defaultBankAccount,
        array $gatewayRecipients,
        array $metadata,
        string $code,
        string $paymentMode
    ) {
        $this->id = $id;
        $this->name = $name;
        $this->email = $email;
        $this->document = $document;
        $this->description = $description;
        $this->type = $type;
        $this->status = $status;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->deletedAt = $deletedAt;
        $this->defaultBankAccount = $defaultBankAccount;
        $this->gatewayRecipients = $gatewayRecipients;
        $this->metadata = $metadata;
        $this->code = $code;
        $this->paymentMode = $paymentMode;
    }

    /**
     * Returns Id.
     * Id
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Id
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     * Name
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * Name
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Email.
     * Email
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     * Email
     *
     * @required
     * @maps email
     */
    public function setEmail(string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Document.
     * Document
     */
    public function getDocument(): string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     * Document
     *
     * @required
     * @maps document
     */
    public function setDocument(string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Description.
     * Description
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * Description
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Type.
     * Type
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Type
     *
     * @required
     * @maps type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Status.
     * Status
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Status
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created At.
     * Creation date
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     * Creation date
     *
     * @required
     * @maps created_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     * Last update date
     */
    public function getUpdatedAt(): \DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     * Last update date
     *
     * @required
     * @maps updated_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Deleted At.
     * Deletion date
     */
    public function getDeletedAt(): \DateTime
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     * Deletion date
     *
     * @required
     * @maps deleted_at
     * @factory \PagarmeApiSDKLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDeletedAt(\DateTime $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Returns Default Bank Account.
     * Default bank account
     */
    public function getDefaultBankAccount(): GetBankAccountResponse
    {
        return $this->defaultBankAccount;
    }

    /**
     * Sets Default Bank Account.
     * Default bank account
     *
     * @required
     * @maps default_bank_account
     */
    public function setDefaultBankAccount(GetBankAccountResponse $defaultBankAccount): void
    {
        $this->defaultBankAccount = $defaultBankAccount;
    }

    /**
     * Returns Gateway Recipients.
     * Info about the recipient on the gateway
     *
     * @return GetGatewayRecipientResponse[]
     */
    public function getGatewayRecipients(): array
    {
        return $this->gatewayRecipients;
    }

    /**
     * Sets Gateway Recipients.
     * Info about the recipient on the gateway
     *
     * @required
     * @maps gateway_recipients
     *
     * @param GetGatewayRecipientResponse[] $gatewayRecipients
     */
    public function setGatewayRecipients(array $gatewayRecipients): void
    {
        $this->gatewayRecipients = $gatewayRecipients;
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @required
     * @maps metadata
     *
     * @param array<string,string> $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Automatic Anticipation Settings.
     */
    public function getAutomaticAnticipationSettings(): ?GetAutomaticAnticipationResponse
    {
        return $this->automaticAnticipationSettings;
    }

    /**
     * Sets Automatic Anticipation Settings.
     *
     * @maps automatic_anticipation_settings
     */
    public function setAutomaticAnticipationSettings(
        ?GetAutomaticAnticipationResponse $automaticAnticipationSettings
    ): void {
        $this->automaticAnticipationSettings = $automaticAnticipationSettings;
    }

    /**
     * Returns Transfer Settings.
     */
    public function getTransferSettings(): ?GetTransferSettingsResponse
    {
        return $this->transferSettings;
    }

    /**
     * Sets Transfer Settings.
     *
     * @maps transfer_settings
     */
    public function setTransferSettings(?GetTransferSettingsResponse $transferSettings): void
    {
        $this->transferSettings = $transferSettings;
    }

    /**
     * Returns Code.
     * Recipient code
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * Recipient code
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Payment Mode.
     * Payment mode
     */
    public function getPaymentMode(): string
    {
        return $this->paymentMode;
    }

    /**
     * Sets Payment Mode.
     * Payment mode
     *
     * @required
     * @maps payment_mode
     */
    public function setPaymentMode(string $paymentMode): void
    {
        $this->paymentMode = $paymentMode;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                                  = $this->id;
        $json['name']                                = $this->name;
        $json['email']                               = $this->email;
        $json['document']                            = $this->document;
        $json['description']                         = $this->description;
        $json['type']                                = $this->type;
        $json['status']                              = $this->status;
        $json['created_at']                          = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        $json['updated_at']                          = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        $json['deleted_at']                          = DateTimeHelper::toRfc3339DateTime($this->deletedAt);
        $json['default_bank_account']                = $this->defaultBankAccount;
        $json['gateway_recipients']                  = $this->gatewayRecipients;
        $json['metadata']                            = $this->metadata;
        if (isset($this->automaticAnticipationSettings)) {
            $json['automatic_anticipation_settings'] = $this->automaticAnticipationSettings;
        }
        if (isset($this->transferSettings)) {
            $json['transfer_settings']               = $this->transferSettings;
        }
        $json['code']                                = $this->code;
        $json['payment_mode']                        = $this->paymentMode;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
