<?php

declare(strict_types=1);

/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MundiAPILib\Models;

use stdClass;

/**
 * 3D-S payment authentication response
 */
class GetThreeDSecureResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $mpi;

    /**
     * @var string
     */
    private $eci;

    /**
     * @var string
     */
    private $cavv;

    /**
     * @var string
     */
    private $transactionId;

    /**
     * @var string
     */
    private $successUrl;

    /**
     * @param string $mpi
     * @param string $eci
     * @param string $cavv
     * @param string $transactionId
     * @param string $successUrl
     */
    public function __construct(string $mpi, string $eci, string $cavv, string $transactionId, string $successUrl)
    {
        $this->mpi = $mpi;
        $this->eci = $eci;
        $this->cavv = $cavv;
        $this->transactionId = $transactionId;
        $this->successUrl = $successUrl;
    }

    /**
     * Returns Mpi.
     * MPI Vendor
     */
    public function getMpi(): string
    {
        return $this->mpi;
    }

    /**
     * Sets Mpi.
     * MPI Vendor
     *
     * @required
     * @maps mpi
     */
    public function setMpi(string $mpi): void
    {
        $this->mpi = $mpi;
    }

    /**
     * Returns Eci.
     * Electronic Commerce Indicator (ECI) (Opcional)
     */
    public function getEci(): string
    {
        return $this->eci;
    }

    /**
     * Sets Eci.
     * Electronic Commerce Indicator (ECI) (Opcional)
     *
     * @required
     * @maps eci
     */
    public function setEci(string $eci): void
    {
        $this->eci = $eci;
    }

    /**
     * Returns Cavv.
     * Online payment cryptogram, definido pelo 3-D Secure.
     */
    public function getCavv(): string
    {
        return $this->cavv;
    }

    /**
     * Sets Cavv.
     * Online payment cryptogram, definido pelo 3-D Secure.
     *
     * @required
     * @maps cavv
     */
    public function setCavv(string $cavv): void
    {
        $this->cavv = $cavv;
    }

    /**
     * Returns Transaction Id.
     * Identificador da transação (XID)
     */
    public function getTransactionId(): string
    {
        return $this->transactionId;
    }

    /**
     * Sets Transaction Id.
     * Identificador da transação (XID)
     *
     * @required
     * @maps transaction_Id
     */
    public function setTransactionId(string $transactionId): void
    {
        $this->transactionId = $transactionId;
    }

    /**
     * Returns Success Url.
     * Url de redirecionamento de sucessso
     */
    public function getSuccessUrl(): string
    {
        return $this->successUrl;
    }

    /**
     * Sets Success Url.
     * Url de redirecionamento de sucessso
     *
     * @required
     * @maps success_url
     */
    public function setSuccessUrl(string $successUrl): void
    {
        $this->successUrl = $successUrl;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['mpi']            = $this->mpi;
        $json['eci']            = $this->eci;
        $json['cavv']           = $this->cavv;
        $json['transaction_Id'] = $this->transactionId;
        $json['success_url']    = $this->successUrl;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
