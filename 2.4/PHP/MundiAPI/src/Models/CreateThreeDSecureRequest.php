<?php

declare(strict_types=1);

/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MundiAPILib\Models;

use stdClass;

/**
 * Creates a 3D-S authentication payment
 */
class CreateThreeDSecureRequest implements \JsonSerializable
{
    /**
     * @var string
     */
    private $mpi;

    /**
     * @var string|null
     */
    private $cavv;

    /**
     * @var string|null
     */
    private $eci;

    /**
     * @var string|null
     */
    private $transactionId;

    /**
     * @var string|null
     */
    private $successUrl;

    /**
     * @var string|null
     */
    private $dsTransactionId;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @param string $mpi
     */
    public function __construct(string $mpi)
    {
        $this->mpi = $mpi;
    }

    /**
     * Returns Mpi.
     * The MPI Vendor (MerchantPlugin)
     */
    public function getMpi(): string
    {
        return $this->mpi;
    }

    /**
     * Sets Mpi.
     * The MPI Vendor (MerchantPlugin)
     *
     * @required
     * @maps mpi
     */
    public function setMpi(string $mpi): void
    {
        $this->mpi = $mpi;
    }

    /**
     * Returns Cavv.
     * The Cardholder Authentication Verification value
     */
    public function getCavv(): ?string
    {
        return $this->cavv;
    }

    /**
     * Sets Cavv.
     * The Cardholder Authentication Verification value
     *
     * @maps cavv
     */
    public function setCavv(?string $cavv): void
    {
        $this->cavv = $cavv;
    }

    /**
     * Returns Eci.
     * The Electronic Commerce Indicator value
     */
    public function getEci(): ?string
    {
        return $this->eci;
    }

    /**
     * Sets Eci.
     * The Electronic Commerce Indicator value
     *
     * @maps eci
     */
    public function setEci(?string $eci): void
    {
        $this->eci = $eci;
    }

    /**
     * Returns Transaction Id.
     * The TransactionId value (XID)
     */
    public function getTransactionId(): ?string
    {
        return $this->transactionId;
    }

    /**
     * Sets Transaction Id.
     * The TransactionId value (XID)
     *
     * @maps transaction_id
     */
    public function setTransactionId(?string $transactionId): void
    {
        $this->transactionId = $transactionId;
    }

    /**
     * Returns Success Url.
     * The success URL after the authentication
     */
    public function getSuccessUrl(): ?string
    {
        return $this->successUrl;
    }

    /**
     * Sets Success Url.
     * The success URL after the authentication
     *
     * @maps success_url
     */
    public function setSuccessUrl(?string $successUrl): void
    {
        $this->successUrl = $successUrl;
    }

    /**
     * Returns Ds Transaction Id.
     * Directory Service Transaction Identifier
     */
    public function getDsTransactionId(): ?string
    {
        return $this->dsTransactionId;
    }

    /**
     * Sets Ds Transaction Id.
     * Directory Service Transaction Identifier
     *
     * @maps ds_transaction_id
     */
    public function setDsTransactionId(?string $dsTransactionId): void
    {
        $this->dsTransactionId = $dsTransactionId;
    }

    /**
     * Returns Version.
     * ThreeDSecure Version
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * ThreeDSecure Version
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['mpi']                   = $this->mpi;
        if (isset($this->cavv)) {
            $json['cavv']              = $this->cavv;
        }
        if (isset($this->eci)) {
            $json['eci']               = $this->eci;
        }
        if (isset($this->transactionId)) {
            $json['transaction_id']    = $this->transactionId;
        }
        if (isset($this->successUrl)) {
            $json['success_url']       = $this->successUrl;
        }
        if (isset($this->dsTransactionId)) {
            $json['ds_transaction_id'] = $this->dsTransactionId;
        }
        if (isset($this->version)) {
            $json['version']           = $this->version;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
