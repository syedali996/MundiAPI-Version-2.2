<?php

declare(strict_types=1);

/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MundiAPILib\Models;

use stdClass;

class GetUsagesDetailsResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $subscriptionId;

    /**
     * @var int
     */
    private $totalAmount;

    /**
     * @var GetPeriodResponse|null
     */
    private $period;

    /**
     * @var ListUsagesDetailsResponse
     */
    private $usages;

    /**
     * @var int|null
     */
    private $totalDiscount;

    /**
     * @var int|null
     */
    private $totalIncrement;

    /**
     * @param string $subscriptionId
     * @param int $totalAmount
     * @param ListUsagesDetailsResponse $usages
     */
    public function __construct(string $subscriptionId, int $totalAmount, ListUsagesDetailsResponse $usages)
    {
        $this->subscriptionId = $subscriptionId;
        $this->totalAmount = $totalAmount;
        $this->usages = $usages;
    }

    /**
     * Returns Subscription Id.
     * Subscription Identifier
     */
    public function getSubscriptionId(): string
    {
        return $this->subscriptionId;
    }

    /**
     * Sets Subscription Id.
     * Subscription Identifier
     *
     * @required
     * @maps subscription_id
     */
    public function setSubscriptionId(string $subscriptionId): void
    {
        $this->subscriptionId = $subscriptionId;
    }

    /**
     * Returns Total Amount.
     * Current Invoice Amount
     */
    public function getTotalAmount(): int
    {
        return $this->totalAmount;
    }

    /**
     * Sets Total Amount.
     * Current Invoice Amount
     *
     * @required
     * @maps total_amount
     */
    public function setTotalAmount(int $totalAmount): void
    {
        $this->totalAmount = $totalAmount;
    }

    /**
     * Returns Period.
     * Period Details
     */
    public function getPeriod(): ?GetPeriodResponse
    {
        return $this->period;
    }

    /**
     * Sets Period.
     * Period Details
     *
     * @maps Period
     */
    public function setPeriod(?GetPeriodResponse $period): void
    {
        $this->period = $period;
    }

    /**
     * Returns Usages.
     * Usages Details
     */
    public function getUsages(): ListUsagesDetailsResponse
    {
        return $this->usages;
    }

    /**
     * Sets Usages.
     * Usages Details
     *
     * @required
     * @maps Usages
     */
    public function setUsages(ListUsagesDetailsResponse $usages): void
    {
        $this->usages = $usages;
    }

    /**
     * Returns Total Discount.
     * Total discounted value
     */
    public function getTotalDiscount(): ?int
    {
        return $this->totalDiscount;
    }

    /**
     * Sets Total Discount.
     * Total discounted value
     *
     * @maps total_discount
     */
    public function setTotalDiscount(?int $totalDiscount): void
    {
        $this->totalDiscount = $totalDiscount;
    }

    /**
     * Returns Total Increment.
     * Total inremented value
     */
    public function getTotalIncrement(): ?int
    {
        return $this->totalIncrement;
    }

    /**
     * Sets Total Increment.
     * Total inremented value
     *
     * @maps total_increment
     */
    public function setTotalIncrement(?int $totalIncrement): void
    {
        $this->totalIncrement = $totalIncrement;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['subscription_id']     = $this->subscriptionId;
        $json['total_amount']        = $this->totalAmount;
        if (isset($this->period)) {
            $json['Period']          = $this->period;
        }
        $json['Usages']              = $this->usages;
        if (isset($this->totalDiscount)) {
            $json['total_discount']  = $this->totalDiscount;
        }
        if (isset($this->totalIncrement)) {
            $json['total_increment'] = $this->totalIncrement;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
