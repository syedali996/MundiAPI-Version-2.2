<?php

declare(strict_types=1);

/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MundiAPILib\Models;

use MundiAPILib\Utils\DateTimeHelper;
use stdClass;

/**
 * Response object to bank account
 */
class GetBankAccountResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $holderName;

    /**
     * @var string
     */
    private $holderType;

    /**
     * @var string
     */
    private $bank;

    /**
     * @var string
     */
    private $branchNumber;

    /**
     * @var string
     */
    private $branchCheckDigit;

    /**
     * @var string
     */
    private $accountNumber;

    /**
     * @var string
     */
    private $accountCheckDigit;

    /**
     * @var string
     */
    private $type;

    /**
     * @var string
     */
    private $status;

    /**
     * @var \DateTime
     */
    private $createdAt;

    /**
     * @var \DateTime
     */
    private $updatedAt;

    /**
     * @var \DateTime
     */
    private $deletedAt;

    /**
     * @var GetRecipientResponse|null
     */
    private $recipient;

    /**
     * @var array<string,string>
     */
    private $metadata;

    /**
     * @var string
     */
    private $pixKey;

    /**
     * @param string $id
     * @param string $holderName
     * @param string $holderType
     * @param string $bank
     * @param string $branchNumber
     * @param string $branchCheckDigit
     * @param string $accountNumber
     * @param string $accountCheckDigit
     * @param string $type
     * @param string $status
     * @param \DateTime $createdAt
     * @param \DateTime $updatedAt
     * @param \DateTime $deletedAt
     * @param array<string,string> $metadata
     * @param string $pixKey
     */
    public function __construct(
        string $id,
        string $holderName,
        string $holderType,
        string $bank,
        string $branchNumber,
        string $branchCheckDigit,
        string $accountNumber,
        string $accountCheckDigit,
        string $type,
        string $status,
        \DateTime $createdAt,
        \DateTime $updatedAt,
        \DateTime $deletedAt,
        array $metadata,
        string $pixKey
    ) {
        $this->id = $id;
        $this->holderName = $holderName;
        $this->holderType = $holderType;
        $this->bank = $bank;
        $this->branchNumber = $branchNumber;
        $this->branchCheckDigit = $branchCheckDigit;
        $this->accountNumber = $accountNumber;
        $this->accountCheckDigit = $accountCheckDigit;
        $this->type = $type;
        $this->status = $status;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->deletedAt = $deletedAt;
        $this->metadata = $metadata;
        $this->pixKey = $pixKey;
    }

    /**
     * Returns Id.
     * Id
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Id
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Holder Name.
     * Holder name
     */
    public function getHolderName(): string
    {
        return $this->holderName;
    }

    /**
     * Sets Holder Name.
     * Holder name
     *
     * @required
     * @maps holder_name
     */
    public function setHolderName(string $holderName): void
    {
        $this->holderName = $holderName;
    }

    /**
     * Returns Holder Type.
     * Holder type
     */
    public function getHolderType(): string
    {
        return $this->holderType;
    }

    /**
     * Sets Holder Type.
     * Holder type
     *
     * @required
     * @maps holder_type
     */
    public function setHolderType(string $holderType): void
    {
        $this->holderType = $holderType;
    }

    /**
     * Returns Bank.
     * Bank
     */
    public function getBank(): string
    {
        return $this->bank;
    }

    /**
     * Sets Bank.
     * Bank
     *
     * @required
     * @maps bank
     */
    public function setBank(string $bank): void
    {
        $this->bank = $bank;
    }

    /**
     * Returns Branch Number.
     * Branch number
     */
    public function getBranchNumber(): string
    {
        return $this->branchNumber;
    }

    /**
     * Sets Branch Number.
     * Branch number
     *
     * @required
     * @maps branch_number
     */
    public function setBranchNumber(string $branchNumber): void
    {
        $this->branchNumber = $branchNumber;
    }

    /**
     * Returns Branch Check Digit.
     * Branch check digit
     */
    public function getBranchCheckDigit(): string
    {
        return $this->branchCheckDigit;
    }

    /**
     * Sets Branch Check Digit.
     * Branch check digit
     *
     * @required
     * @maps branch_check_digit
     */
    public function setBranchCheckDigit(string $branchCheckDigit): void
    {
        $this->branchCheckDigit = $branchCheckDigit;
    }

    /**
     * Returns Account Number.
     * Account number
     */
    public function getAccountNumber(): string
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     * Account number
     *
     * @required
     * @maps account_number
     */
    public function setAccountNumber(string $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Check Digit.
     * Account check digit
     */
    public function getAccountCheckDigit(): string
    {
        return $this->accountCheckDigit;
    }

    /**
     * Sets Account Check Digit.
     * Account check digit
     *
     * @required
     * @maps account_check_digit
     */
    public function setAccountCheckDigit(string $accountCheckDigit): void
    {
        $this->accountCheckDigit = $accountCheckDigit;
    }

    /**
     * Returns Type.
     * Bank account type
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Bank account type
     *
     * @required
     * @maps type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Status.
     * Bank account status
     */
    public function getStatus(): string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * Bank account status
     *
     * @required
     * @maps status
     */
    public function setStatus(string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Created At.
     * Creation date
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     * Creation date
     *
     * @required
     * @maps created_at
     * @factory \MundiAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     * Last update date
     */
    public function getUpdatedAt(): \DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     * Last update date
     *
     * @required
     * @maps updated_at
     * @factory \MundiAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Deleted At.
     * Deletion date
     */
    public function getDeletedAt(): \DateTime
    {
        return $this->deletedAt;
    }

    /**
     * Sets Deleted At.
     * Deletion date
     *
     * @required
     * @maps deleted_at
     * @factory \MundiAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setDeletedAt(\DateTime $deletedAt): void
    {
        $this->deletedAt = $deletedAt;
    }

    /**
     * Returns Recipient.
     * Recipient
     */
    public function getRecipient(): ?GetRecipientResponse
    {
        return $this->recipient;
    }

    /**
     * Sets Recipient.
     * Recipient
     *
     * @maps recipient
     */
    public function setRecipient(?GetRecipientResponse $recipient): void
    {
        $this->recipient = $recipient;
    }

    /**
     * Returns Metadata.
     * Metadata
     *
     * @return array<string,string>
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     * Metadata
     *
     * @required
     * @maps metadata
     *
     * @param array<string,string> $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Pix Key.
     * Pix Key
     */
    public function getPixKey(): string
    {
        return $this->pixKey;
    }

    /**
     * Sets Pix Key.
     * Pix Key
     *
     * @required
     * @maps pix_key
     */
    public function setPixKey(string $pixKey): void
    {
        $this->pixKey = $pixKey;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']                  = $this->id;
        $json['holder_name']         = $this->holderName;
        $json['holder_type']         = $this->holderType;
        $json['bank']                = $this->bank;
        $json['branch_number']       = $this->branchNumber;
        $json['branch_check_digit']  = $this->branchCheckDigit;
        $json['account_number']      = $this->accountNumber;
        $json['account_check_digit'] = $this->accountCheckDigit;
        $json['type']                = $this->type;
        $json['status']              = $this->status;
        $json['created_at']          = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        $json['updated_at']          = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        $json['deleted_at']          = DateTimeHelper::toRfc3339DateTime($this->deletedAt);
        if (isset($this->recipient)) {
            $json['recipient']       = $this->recipient;
        }
        $json['metadata']            = $this->metadata;
        $json['pix_key']             = $this->pixKey;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
