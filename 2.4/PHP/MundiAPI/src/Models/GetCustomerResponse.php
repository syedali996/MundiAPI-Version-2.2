<?php

declare(strict_types=1);

/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace MundiAPILib\Models;

use MundiAPILib\Utils\DateTimeHelper;
use stdClass;

/**
 * Response object for getting a customer
 */
class GetCustomerResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $id;

    /**
     * @var string
     */
    private $name;

    /**
     * @var string
     */
    private $email;

    /**
     * @var bool
     */
    private $delinquent;

    /**
     * @var \DateTime
     */
    private $createdAt;

    /**
     * @var \DateTime
     */
    private $updatedAt;

    /**
     * @var string
     */
    private $document;

    /**
     * @var string
     */
    private $type;

    /**
     * @var string
     */
    private $fbAccessToken;

    /**
     * @var GetAddressResponse
     */
    private $address;

    /**
     * @var array<string,string>
     */
    private $metadata;

    /**
     * @var GetPhonesResponse
     */
    private $phones;

    /**
     * @var int|null
     */
    private $fbId;

    /**
     * @var string
     */
    private $code;

    /**
     * @var string
     */
    private $documentType;

    /**
     * @param string $id
     * @param string $name
     * @param string $email
     * @param bool $delinquent
     * @param \DateTime $createdAt
     * @param \DateTime $updatedAt
     * @param string $document
     * @param string $type
     * @param string $fbAccessToken
     * @param GetAddressResponse $address
     * @param array<string,string> $metadata
     * @param GetPhonesResponse $phones
     * @param string $code
     * @param string $documentType
     */
    public function __construct(
        string $id,
        string $name,
        string $email,
        bool $delinquent,
        \DateTime $createdAt,
        \DateTime $updatedAt,
        string $document,
        string $type,
        string $fbAccessToken,
        GetAddressResponse $address,
        array $metadata,
        GetPhonesResponse $phones,
        string $code,
        string $documentType
    ) {
        $this->id = $id;
        $this->name = $name;
        $this->email = $email;
        $this->delinquent = $delinquent;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->document = $document;
        $this->type = $type;
        $this->fbAccessToken = $fbAccessToken;
        $this->address = $address;
        $this->metadata = $metadata;
        $this->phones = $phones;
        $this->code = $code;
        $this->documentType = $documentType;
    }

    /**
     * Returns Id.
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Name.
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * @required
     * @maps name
     */
    public function setName(string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @required
     * @maps email
     */
    public function setEmail(string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Delinquent.
     */
    public function getDelinquent(): bool
    {
        return $this->delinquent;
    }

    /**
     * Sets Delinquent.
     *
     * @required
     * @maps delinquent
     */
    public function setDelinquent(bool $delinquent): void
    {
        $this->delinquent = $delinquent;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): \DateTime
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @required
     * @maps created_at
     * @factory \MundiAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedAt(\DateTime $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Updated At.
     */
    public function getUpdatedAt(): \DateTime
    {
        return $this->updatedAt;
    }

    /**
     * Sets Updated At.
     *
     * @required
     * @maps updated_at
     * @factory \MundiAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setUpdatedAt(\DateTime $updatedAt): void
    {
        $this->updatedAt = $updatedAt;
    }

    /**
     * Returns Document.
     */
    public function getDocument(): string
    {
        return $this->document;
    }

    /**
     * Sets Document.
     *
     * @required
     * @maps document
     */
    public function setDocument(string $document): void
    {
        $this->document = $document;
    }

    /**
     * Returns Type.
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @required
     * @maps type
     */
    public function setType(string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Fb Access Token.
     */
    public function getFbAccessToken(): string
    {
        return $this->fbAccessToken;
    }

    /**
     * Sets Fb Access Token.
     *
     * @required
     * @maps fb_access_token
     */
    public function setFbAccessToken(string $fbAccessToken): void
    {
        $this->fbAccessToken = $fbAccessToken;
    }

    /**
     * Returns Address.
     */
    public function getAddress(): GetAddressResponse
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * @required
     * @maps address
     */
    public function setAddress(GetAddressResponse $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Metadata.
     *
     * @return array<string,string>
     */
    public function getMetadata(): array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @required
     * @maps metadata
     *
     * @param array<string,string> $metadata
     */
    public function setMetadata(array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Phones.
     */
    public function getPhones(): GetPhonesResponse
    {
        return $this->phones;
    }

    /**
     * Sets Phones.
     *
     * @required
     * @maps phones
     */
    public function setPhones(GetPhonesResponse $phones): void
    {
        $this->phones = $phones;
    }

    /**
     * Returns Fb Id.
     */
    public function getFbId(): ?int
    {
        return $this->fbId;
    }

    /**
     * Sets Fb Id.
     *
     * @maps fb_id
     */
    public function setFbId(?int $fbId): void
    {
        $this->fbId = $fbId;
    }

    /**
     * Returns Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     */
    public function getCode(): string
    {
        return $this->code;
    }

    /**
     * Sets Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     *
     * @required
     * @maps code
     */
    public function setCode(string $code): void
    {
        $this->code = $code;
    }

    /**
     * Returns Document Type.
     */
    public function getDocumentType(): string
    {
        return $this->documentType;
    }

    /**
     * Sets Document Type.
     *
     * @required
     * @maps document_type
     */
    public function setDocumentType(string $documentType): void
    {
        $this->documentType = $documentType;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['id']              = $this->id;
        $json['name']            = $this->name;
        $json['email']           = $this->email;
        $json['delinquent']      = $this->delinquent;
        $json['created_at']      = DateTimeHelper::toRfc3339DateTime($this->createdAt);
        $json['updated_at']      = DateTimeHelper::toRfc3339DateTime($this->updatedAt);
        $json['document']        = $this->document;
        $json['type']            = $this->type;
        $json['fb_access_token'] = $this->fbAccessToken;
        $json['address']         = $this->address;
        $json['metadata']        = $this->metadata;
        $json['phones']          = $this->phones;
        if (isset($this->fbId)) {
            $json['fb_id']       = $this->fbId;
        }
        $json['code']            = $this->code;
        $json['document_type']   = $this->documentType;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
