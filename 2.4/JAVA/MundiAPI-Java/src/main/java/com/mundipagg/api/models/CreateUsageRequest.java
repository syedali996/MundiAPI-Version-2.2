/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.mundipagg.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mundipagg.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;

/**
 * This is a model class for CreateUsageRequest type.
 */
public class CreateUsageRequest {
    private int quantity;
    private String description;
    private LocalDateTime usedAt;
    private String code;
    private String group;
    private Integer amount;

    /**
     * Default constructor.
     */
    public CreateUsageRequest() {
    }

    /**
     * Initialization constructor.
     * @param  quantity  int value for quantity.
     * @param  description  String value for description.
     * @param  usedAt  LocalDateTime value for usedAt.
     * @param  code  String value for code.
     * @param  group  String value for group.
     * @param  amount  Integer value for amount.
     */
    public CreateUsageRequest(
            int quantity,
            String description,
            LocalDateTime usedAt,
            String code,
            String group,
            Integer amount) {
        this.quantity = quantity;
        this.description = description;
        this.usedAt = usedAt;
        this.code = code;
        this.group = group;
        this.amount = amount;
    }

    /**
     * Getter for Quantity.
     * @return Returns the int
     */
    @JsonGetter("quantity")
    public int getQuantity() {
        return quantity;
    }

    /**
     * Setter for Quantity.
     * @param quantity Value for int
     */
    @JsonSetter("quantity")
    public void setQuantity(int quantity) {
        this.quantity = quantity;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for UsedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("used_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUsedAt() {
        return usedAt;
    }

    /**
     * Setter for UsedAt.
     * @param usedAt Value for LocalDateTime
     */
    @JsonSetter("used_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUsedAt(LocalDateTime usedAt) {
        this.usedAt = usedAt;
    }

    /**
     * Getter for Code.
     * Identification code in the client system
     * @return Returns the String
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Identification code in the client system
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Group.
     * identification group in the client system
     * @return Returns the String
     */
    @JsonGetter("group")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGroup() {
        return group;
    }

    /**
     * Setter for Group.
     * identification group in the client system
     * @param group Value for String
     */
    @JsonSetter("group")
    public void setGroup(String group) {
        this.group = group;
    }

    /**
     * Getter for Amount.
     * Field used in item scheme type 'Percent'
     * @return Returns the Integer
     */
    @JsonGetter("amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * Field used in item scheme type 'Percent'
     * @param amount Value for Integer
     */
    @JsonSetter("amount")
    public void setAmount(Integer amount) {
        this.amount = amount;
    }

    /**
     * Converts this CreateUsageRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateUsageRequest [" + "quantity=" + quantity + ", description=" + description
                + ", usedAt=" + usedAt + ", code=" + code + ", group=" + group + ", amount="
                + amount + "]";
    }

    /**
     * Builds a new {@link CreateUsageRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateUsageRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(quantity, description, usedAt)
                .code(getCode())
                .group(getGroup())
                .amount(getAmount());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateUsageRequest}.
     */
    public static class Builder {
        private int quantity;
        private String description;
        private LocalDateTime usedAt;
        private String code;
        private String group;
        private Integer amount;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  quantity  int value for quantity.
         * @param  description  String value for description.
         * @param  usedAt  LocalDateTime value for usedAt.
         */
        public Builder(int quantity, String description, LocalDateTime usedAt) {
            this.quantity = quantity;
            this.description = description;
            this.usedAt = usedAt;
        }

        /**
         * Setter for quantity.
         * @param  quantity  int value for quantity.
         * @return Builder
         */
        public Builder quantity(int quantity) {
            this.quantity = quantity;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for usedAt.
         * @param  usedAt  LocalDateTime value for usedAt.
         * @return Builder
         */
        public Builder usedAt(LocalDateTime usedAt) {
            this.usedAt = usedAt;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for group.
         * @param  group  String value for group.
         * @return Builder
         */
        public Builder group(String group) {
            this.group = group;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Integer value for amount.
         * @return Builder
         */
        public Builder amount(Integer amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Builds a new {@link CreateUsageRequest} object using the set fields.
         * @return {@link CreateUsageRequest}
         */
        public CreateUsageRequest build() {
            return new CreateUsageRequest(quantity, description, usedAt, code, group, amount);
        }
    }
}
