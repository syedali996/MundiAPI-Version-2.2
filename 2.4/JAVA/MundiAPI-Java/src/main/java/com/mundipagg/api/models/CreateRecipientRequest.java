/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.mundipagg.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.Map;

/**
 * This is a model class for CreateRecipientRequest type.
 */
public class CreateRecipientRequest {
    private String name;
    private String email;
    private String description;
    private String document;
    private String type;
    private CreateBankAccountRequest defaultBankAccount;
    private Map<String, String> metadata;
    private CreateTransferSettingsRequest transferSettings;
    private String code;
    private String paymentMode;

    /**
     * Default constructor.
     */
    public CreateRecipientRequest() {
        paymentMode = "bank_transfer";
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  email  String value for email.
     * @param  description  String value for description.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  defaultBankAccount  CreateBankAccountRequest value for defaultBankAccount.
     * @param  metadata  Map of String, value for metadata.
     * @param  code  String value for code.
     * @param  paymentMode  String value for paymentMode.
     * @param  transferSettings  CreateTransferSettingsRequest value for transferSettings.
     */
    public CreateRecipientRequest(
            String name,
            String email,
            String description,
            String document,
            String type,
            CreateBankAccountRequest defaultBankAccount,
            Map<String, String> metadata,
            String code,
            String paymentMode,
            CreateTransferSettingsRequest transferSettings) {
        this.name = name;
        this.email = email;
        this.description = description;
        this.document = document;
        this.type = type;
        this.defaultBankAccount = defaultBankAccount;
        this.metadata = metadata;
        this.transferSettings = transferSettings;
        this.code = code;
        this.paymentMode = paymentMode;
    }

    /**
     * Getter for Name.
     * Recipient name
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Recipient name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Email.
     * Recipient email
     * @return Returns the String
     */
    @JsonGetter("email")
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * Recipient email
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Description.
     * Recipient description
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Recipient description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Document.
     * Recipient document number
     * @return Returns the String
     */
    @JsonGetter("document")
    public String getDocument() {
        return document;
    }

    /**
     * Setter for Document.
     * Recipient document number
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = document;
    }

    /**
     * Getter for Type.
     * Recipient type
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Recipient type
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for DefaultBankAccount.
     * Bank account
     * @return Returns the CreateBankAccountRequest
     */
    @JsonGetter("default_bank_account")
    public CreateBankAccountRequest getDefaultBankAccount() {
        return defaultBankAccount;
    }

    /**
     * Setter for DefaultBankAccount.
     * Bank account
     * @param defaultBankAccount Value for CreateBankAccountRequest
     */
    @JsonSetter("default_bank_account")
    public void setDefaultBankAccount(CreateBankAccountRequest defaultBankAccount) {
        this.defaultBankAccount = defaultBankAccount;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for TransferSettings.
     * Receiver Transfer Information
     * @return Returns the CreateTransferSettingsRequest
     */
    @JsonGetter("transfer_settings")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateTransferSettingsRequest getTransferSettings() {
        return transferSettings;
    }

    /**
     * Setter for TransferSettings.
     * Receiver Transfer Information
     * @param transferSettings Value for CreateTransferSettingsRequest
     */
    @JsonSetter("transfer_settings")
    public void setTransferSettings(CreateTransferSettingsRequest transferSettings) {
        this.transferSettings = transferSettings;
    }

    /**
     * Getter for Code.
     * Recipient code
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Recipient code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for PaymentMode.
     * Payment mode
     * @return Returns the String
     */
    @JsonGetter("payment_mode")
    public String getPaymentMode() {
        return paymentMode;
    }

    /**
     * Setter for PaymentMode.
     * Payment mode
     * @param paymentMode Value for String
     */
    @JsonSetter("payment_mode")
    public void setPaymentMode(String paymentMode) {
        this.paymentMode = paymentMode;
    }

    /**
     * Converts this CreateRecipientRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateRecipientRequest [" + "name=" + name + ", email=" + email + ", description="
                + description + ", document=" + document + ", type=" + type
                + ", defaultBankAccount=" + defaultBankAccount + ", metadata=" + metadata
                + ", code=" + code + ", paymentMode=" + paymentMode + ", transferSettings="
                + transferSettings + "]";
    }

    /**
     * Builds a new {@link CreateRecipientRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateRecipientRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, email, description, document, type, defaultBankAccount,
                metadata, code, paymentMode)
                .transferSettings(getTransferSettings());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateRecipientRequest}.
     */
    public static class Builder {
        private String name;
        private String email;
        private String description;
        private String document;
        private String type;
        private CreateBankAccountRequest defaultBankAccount;
        private Map<String, String> metadata;
        private String code;
        private String paymentMode = "bank_transfer";
        private CreateTransferSettingsRequest transferSettings;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  email  String value for email.
         * @param  description  String value for description.
         * @param  document  String value for document.
         * @param  type  String value for type.
         * @param  defaultBankAccount  CreateBankAccountRequest value for defaultBankAccount.
         * @param  metadata  Map of String, value for metadata.
         * @param  code  String value for code.
         * @param  paymentMode  String value for paymentMode.
         */
        public Builder(String name, String email, String description, String document, String type,
                CreateBankAccountRequest defaultBankAccount, Map<String, String> metadata,
                String code, String paymentMode) {
            this.name = name;
            this.email = email;
            this.description = description;
            this.document = document;
            this.type = type;
            this.defaultBankAccount = defaultBankAccount;
            this.metadata = metadata;
            this.code = code;
            this.paymentMode = paymentMode;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = document;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for defaultBankAccount.
         * @param  defaultBankAccount  CreateBankAccountRequest value for defaultBankAccount.
         * @return Builder
         */
        public Builder defaultBankAccount(CreateBankAccountRequest defaultBankAccount) {
            this.defaultBankAccount = defaultBankAccount;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for paymentMode.
         * @param  paymentMode  String value for paymentMode.
         * @return Builder
         */
        public Builder paymentMode(String paymentMode) {
            this.paymentMode = paymentMode;
            return this;
        }

        /**
         * Setter for transferSettings.
         * @param  transferSettings  CreateTransferSettingsRequest value for transferSettings.
         * @return Builder
         */
        public Builder transferSettings(CreateTransferSettingsRequest transferSettings) {
            this.transferSettings = transferSettings;
            return this;
        }

        /**
         * Builds a new {@link CreateRecipientRequest} object using the set fields.
         * @return {@link CreateRecipientRequest}
         */
        public CreateRecipientRequest build() {
            return new CreateRecipientRequest(name, email, description, document, type,
                    defaultBankAccount, metadata, code, paymentMode, transferSettings);
        }
    }
}
