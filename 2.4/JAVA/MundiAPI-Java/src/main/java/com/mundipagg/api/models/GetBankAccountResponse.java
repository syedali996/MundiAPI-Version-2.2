/*
 * MundiAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.mundipagg.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.mundipagg.api.DateTimeHelper;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for GetBankAccountResponse type.
 */
public class GetBankAccountResponse {
    private String id;
    private String holderName;
    private String holderType;
    private String bank;
    private String branchNumber;
    private String branchCheckDigit;
    private String accountNumber;
    private String accountCheckDigit;
    private String type;
    private String status;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private LocalDateTime deletedAt;
    private GetRecipientResponse recipient;
    private Map<String, String> metadata;
    private String pixKey;

    /**
     * Default constructor.
     */
    public GetBankAccountResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  holderName  String value for holderName.
     * @param  holderType  String value for holderType.
     * @param  bank  String value for bank.
     * @param  branchNumber  String value for branchNumber.
     * @param  branchCheckDigit  String value for branchCheckDigit.
     * @param  accountNumber  String value for accountNumber.
     * @param  accountCheckDigit  String value for accountCheckDigit.
     * @param  type  String value for type.
     * @param  status  String value for status.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  deletedAt  LocalDateTime value for deletedAt.
     * @param  metadata  Map of String, value for metadata.
     * @param  pixKey  String value for pixKey.
     * @param  recipient  GetRecipientResponse value for recipient.
     */
    public GetBankAccountResponse(
            String id,
            String holderName,
            String holderType,
            String bank,
            String branchNumber,
            String branchCheckDigit,
            String accountNumber,
            String accountCheckDigit,
            String type,
            String status,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime deletedAt,
            Map<String, String> metadata,
            String pixKey,
            GetRecipientResponse recipient) {
        this.id = id;
        this.holderName = holderName;
        this.holderType = holderType;
        this.bank = bank;
        this.branchNumber = branchNumber;
        this.branchCheckDigit = branchCheckDigit;
        this.accountNumber = accountNumber;
        this.accountCheckDigit = accountCheckDigit;
        this.type = type;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.deletedAt = deletedAt;
        this.recipient = recipient;
        this.metadata = metadata;
        this.pixKey = pixKey;
    }

    /**
     * Getter for Id.
     * Id
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Id
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for HolderName.
     * Holder name
     * @return Returns the String
     */
    @JsonGetter("holder_name")
    public String getHolderName() {
        return holderName;
    }

    /**
     * Setter for HolderName.
     * Holder name
     * @param holderName Value for String
     */
    @JsonSetter("holder_name")
    public void setHolderName(String holderName) {
        this.holderName = holderName;
    }

    /**
     * Getter for HolderType.
     * Holder type
     * @return Returns the String
     */
    @JsonGetter("holder_type")
    public String getHolderType() {
        return holderType;
    }

    /**
     * Setter for HolderType.
     * Holder type
     * @param holderType Value for String
     */
    @JsonSetter("holder_type")
    public void setHolderType(String holderType) {
        this.holderType = holderType;
    }

    /**
     * Getter for Bank.
     * Bank
     * @return Returns the String
     */
    @JsonGetter("bank")
    public String getBank() {
        return bank;
    }

    /**
     * Setter for Bank.
     * Bank
     * @param bank Value for String
     */
    @JsonSetter("bank")
    public void setBank(String bank) {
        this.bank = bank;
    }

    /**
     * Getter for BranchNumber.
     * Branch number
     * @return Returns the String
     */
    @JsonGetter("branch_number")
    public String getBranchNumber() {
        return branchNumber;
    }

    /**
     * Setter for BranchNumber.
     * Branch number
     * @param branchNumber Value for String
     */
    @JsonSetter("branch_number")
    public void setBranchNumber(String branchNumber) {
        this.branchNumber = branchNumber;
    }

    /**
     * Getter for BranchCheckDigit.
     * Branch check digit
     * @return Returns the String
     */
    @JsonGetter("branch_check_digit")
    public String getBranchCheckDigit() {
        return branchCheckDigit;
    }

    /**
     * Setter for BranchCheckDigit.
     * Branch check digit
     * @param branchCheckDigit Value for String
     */
    @JsonSetter("branch_check_digit")
    public void setBranchCheckDigit(String branchCheckDigit) {
        this.branchCheckDigit = branchCheckDigit;
    }

    /**
     * Getter for AccountNumber.
     * Account number
     * @return Returns the String
     */
    @JsonGetter("account_number")
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * Account number
     * @param accountNumber Value for String
     */
    @JsonSetter("account_number")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for AccountCheckDigit.
     * Account check digit
     * @return Returns the String
     */
    @JsonGetter("account_check_digit")
    public String getAccountCheckDigit() {
        return accountCheckDigit;
    }

    /**
     * Setter for AccountCheckDigit.
     * Account check digit
     * @param accountCheckDigit Value for String
     */
    @JsonSetter("account_check_digit")
    public void setAccountCheckDigit(String accountCheckDigit) {
        this.accountCheckDigit = accountCheckDigit;
    }

    /**
     * Getter for Type.
     * Bank account type
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Bank account type
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Status.
     * Bank account status
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Bank account status
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for CreatedAt.
     * Creation date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * Last update date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * Last update date
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for DeletedAt.
     * Deletion date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("deleted_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDeletedAt() {
        return deletedAt;
    }

    /**
     * Setter for DeletedAt.
     * Deletion date
     * @param deletedAt Value for LocalDateTime
     */
    @JsonSetter("deleted_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for Recipient.
     * Recipient
     * @return Returns the GetRecipientResponse
     */
    @JsonGetter("recipient")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetRecipientResponse getRecipient() {
        return recipient;
    }

    /**
     * Setter for Recipient.
     * Recipient
     * @param recipient Value for GetRecipientResponse
     */
    @JsonSetter("recipient")
    public void setRecipient(GetRecipientResponse recipient) {
        this.recipient = recipient;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for PixKey.
     * Pix Key
     * @return Returns the String
     */
    @JsonGetter("pix_key")
    public String getPixKey() {
        return pixKey;
    }

    /**
     * Setter for PixKey.
     * Pix Key
     * @param pixKey Value for String
     */
    @JsonSetter("pix_key")
    public void setPixKey(String pixKey) {
        this.pixKey = pixKey;
    }

    /**
     * Converts this GetBankAccountResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetBankAccountResponse [" + "id=" + id + ", holderName=" + holderName
                + ", holderType=" + holderType + ", bank=" + bank + ", branchNumber=" + branchNumber
                + ", branchCheckDigit=" + branchCheckDigit + ", accountNumber=" + accountNumber
                + ", accountCheckDigit=" + accountCheckDigit + ", type=" + type + ", status="
                + status + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + ", deletedAt="
                + deletedAt + ", metadata=" + metadata + ", pixKey=" + pixKey + ", recipient="
                + recipient + "]";
    }

    /**
     * Builds a new {@link GetBankAccountResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetBankAccountResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, holderName, holderType, bank, branchNumber,
                branchCheckDigit, accountNumber, accountCheckDigit, type, status, createdAt,
                updatedAt, deletedAt, metadata, pixKey)
                .recipient(getRecipient());
        return builder;
    }

    /**
     * Class to build instances of {@link GetBankAccountResponse}.
     */
    public static class Builder {
        private String id;
        private String holderName;
        private String holderType;
        private String bank;
        private String branchNumber;
        private String branchCheckDigit;
        private String accountNumber;
        private String accountCheckDigit;
        private String type;
        private String status;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private LocalDateTime deletedAt;
        private Map<String, String> metadata;
        private String pixKey;
        private GetRecipientResponse recipient;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  holderName  String value for holderName.
         * @param  holderType  String value for holderType.
         * @param  bank  String value for bank.
         * @param  branchNumber  String value for branchNumber.
         * @param  branchCheckDigit  String value for branchCheckDigit.
         * @param  accountNumber  String value for accountNumber.
         * @param  accountCheckDigit  String value for accountCheckDigit.
         * @param  type  String value for type.
         * @param  status  String value for status.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  deletedAt  LocalDateTime value for deletedAt.
         * @param  metadata  Map of String, value for metadata.
         * @param  pixKey  String value for pixKey.
         */
        public Builder(String id, String holderName, String holderType, String bank,
                String branchNumber, String branchCheckDigit, String accountNumber,
                String accountCheckDigit, String type, String status, LocalDateTime createdAt,
                LocalDateTime updatedAt, LocalDateTime deletedAt, Map<String, String> metadata,
                String pixKey) {
            this.id = id;
            this.holderName = holderName;
            this.holderType = holderType;
            this.bank = bank;
            this.branchNumber = branchNumber;
            this.branchCheckDigit = branchCheckDigit;
            this.accountNumber = accountNumber;
            this.accountCheckDigit = accountCheckDigit;
            this.type = type;
            this.status = status;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.deletedAt = deletedAt;
            this.metadata = metadata;
            this.pixKey = pixKey;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for holderName.
         * @param  holderName  String value for holderName.
         * @return Builder
         */
        public Builder holderName(String holderName) {
            this.holderName = holderName;
            return this;
        }

        /**
         * Setter for holderType.
         * @param  holderType  String value for holderType.
         * @return Builder
         */
        public Builder holderType(String holderType) {
            this.holderType = holderType;
            return this;
        }

        /**
         * Setter for bank.
         * @param  bank  String value for bank.
         * @return Builder
         */
        public Builder bank(String bank) {
            this.bank = bank;
            return this;
        }

        /**
         * Setter for branchNumber.
         * @param  branchNumber  String value for branchNumber.
         * @return Builder
         */
        public Builder branchNumber(String branchNumber) {
            this.branchNumber = branchNumber;
            return this;
        }

        /**
         * Setter for branchCheckDigit.
         * @param  branchCheckDigit  String value for branchCheckDigit.
         * @return Builder
         */
        public Builder branchCheckDigit(String branchCheckDigit) {
            this.branchCheckDigit = branchCheckDigit;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for accountCheckDigit.
         * @param  accountCheckDigit  String value for accountCheckDigit.
         * @return Builder
         */
        public Builder accountCheckDigit(String accountCheckDigit) {
            this.accountCheckDigit = accountCheckDigit;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for deletedAt.
         * @param  deletedAt  LocalDateTime value for deletedAt.
         * @return Builder
         */
        public Builder deletedAt(LocalDateTime deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for pixKey.
         * @param  pixKey  String value for pixKey.
         * @return Builder
         */
        public Builder pixKey(String pixKey) {
            this.pixKey = pixKey;
            return this;
        }

        /**
         * Setter for recipient.
         * @param  recipient  GetRecipientResponse value for recipient.
         * @return Builder
         */
        public Builder recipient(GetRecipientResponse recipient) {
            this.recipient = recipient;
            return this;
        }

        /**
         * Builds a new {@link GetBankAccountResponse} object using the set fields.
         * @return {@link GetBankAccountResponse}
         */
        public GetBankAccountResponse build() {
            return new GetBankAccountResponse(id, holderName, holderType, bank, branchNumber,
                    branchCheckDigit, accountNumber, accountCheckDigit, type, status, createdAt,
                    updatedAt, deletedAt, metadata, pixKey, recipient);
        }
    }
}
