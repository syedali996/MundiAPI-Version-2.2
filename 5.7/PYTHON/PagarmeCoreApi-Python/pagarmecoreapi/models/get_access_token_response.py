# -*- coding: utf-8 -*-

"""
pagarmecoreapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from pagarmecoreapi.api_helper import APIHelper
from pagarmecoreapi.models.get_customer_response import GetCustomerResponse


class GetAccessTokenResponse(object):

    """Implementation of the 'GetAccessTokenResponse' model.

    Response object for getting a access token

    Attributes:
        id (string): TODO: type description here.
        code (string): TODO: type description here.
        status (string): TODO: type description here.
        created_at (datetime): TODO: type description here.
        customer (GetCustomerResponse): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "code": 'code',
        "status": 'status',
        "created_at": 'created_at',
        "customer": 'customer'
    }

    _optionals = [
        'customer',
    ]

    def __init__(self,
                 id=None,
                 code=None,
                 status=None,
                 created_at=None,
                 customer=APIHelper.SKIP):
        """Constructor for the GetAccessTokenResponse class"""

        # Initialize members of the class
        self.id = id 
        self.code = code 
        self.status = status 
        self.created_at = APIHelper.RFC3339DateTime(created_at) if created_at else None 
        if customer is not APIHelper.SKIP:
            self.customer = customer 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        id = dictionary.get("id") if dictionary.get("id") else None
        code = dictionary.get("code") if dictionary.get("code") else None
        status = dictionary.get("status") if dictionary.get("status") else None
        created_at = APIHelper.RFC3339DateTime.from_value(dictionary.get("created_at")).datetime if dictionary.get("created_at") else None
        customer = GetCustomerResponse.from_dictionary(dictionary.get('customer')) if 'customer' in dictionary.keys() else APIHelper.SKIP 
        # Return an object of this model
        return cls(id,
                   code,
                   status,
                   created_at,
                   customer)
