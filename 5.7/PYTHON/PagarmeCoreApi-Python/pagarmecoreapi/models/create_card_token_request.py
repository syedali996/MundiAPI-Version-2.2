# -*- coding: utf-8 -*-

"""
pagarmecoreapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreateCardTokenRequest(object):

    """Implementation of the 'CreateCardTokenRequest' model.

    Card token data

    Attributes:
        number (string): Credit card number
        holder_name (string): Holder name, as written on the card
        exp_month (int): The expiration month
        exp_year (int): The expiration year, that can be informed with 2 or 4
            digits
        cvv (string): The card's security code
        brand (string): Card brand
        label (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "number": 'number',
        "holder_name": 'holder_name',
        "exp_month": 'exp_month',
        "exp_year": 'exp_year',
        "cvv": 'cvv',
        "brand": 'brand',
        "label": 'label'
    }

    def __init__(self,
                 number=None,
                 holder_name=None,
                 exp_month=None,
                 exp_year=None,
                 cvv=None,
                 brand=None,
                 label=None):
        """Constructor for the CreateCardTokenRequest class"""

        # Initialize members of the class
        self.number = number 
        self.holder_name = holder_name 
        self.exp_month = exp_month 
        self.exp_year = exp_year 
        self.cvv = cvv 
        self.brand = brand 
        self.label = label 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary

        number = dictionary.get("number") if dictionary.get("number") else None
        holder_name = dictionary.get("holder_name") if dictionary.get("holder_name") else None
        exp_month = dictionary.get("exp_month") if dictionary.get("exp_month") else None
        exp_year = dictionary.get("exp_year") if dictionary.get("exp_year") else None
        cvv = dictionary.get("cvv") if dictionary.get("cvv") else None
        brand = dictionary.get("brand") if dictionary.get("brand") else None
        label = dictionary.get("label") if dictionary.get("label") else None
        # Return an object of this model
        return cls(number,
                   holder_name,
                   exp_month,
                   exp_year,
                   cvv,
                   brand,
                   label)
