# -*- coding: utf-8 -*-

"""
pagarmecoreapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from pagarmecoreapi.api_helper import APIHelper
from pagarmecoreapi.configuration import Server
from pagarmecoreapi.controllers.base_controller import BaseController
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from pagarmecoreapi.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from apimatic_core.authentication.multiple.or_auth_group import Or
from pagarmecoreapi.models.get_transaction_response import GetTransactionResponse


class TransactionsController(BaseController):

    """A Controller to access Endpoints in the pagarmecoreapi API."""
    def __init__(self, config):
        super(TransactionsController, self).__init__(config)

    def get_transaction(self,
                        transaction_id):
        """Does a GET request to /transactions/{transaction_id}.

        TODO: type endpoint description here.

        Args:
            transaction_id (string): TODO: type description here.

        Returns:
            GetTransactionResponse: Response from the API.

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.DEFAULT)
            .path('/transactions/{transaction_id}')
            .http_method(HttpMethodEnum.GET)
            .template_param(Parameter()
                            .key('transaction_id')
                            .value(transaction_id)
                            .should_encode(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .auth(Single('global'))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(GetTransactionResponse.from_dictionary)
        ).execute()
