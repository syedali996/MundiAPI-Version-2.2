/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetSubscriptionResponse type.
 */
public class GetSubscriptionResponse {
    private String id;
    private String code;
    private LocalDateTime startAt;
    private String interval;
    private int intervalCount;
    private String billingType;
    private GetPeriodResponse currentCycle;
    private String paymentMethod;
    private String currency;
    private int installments;
    private String status;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;
    private GetCustomerResponse customer;
    private GetCardResponse card;
    private List<GetSubscriptionItemResponse> items;
    private String statementDescriptor;
    private Map<String, String> metadata;
    private GetSetupResponse setup;
    private String gatewayAffiliationId;
    private LocalDateTime nextBillingAt;
    private Integer billingDay;
    private Integer minimumPrice;
    private LocalDateTime canceledAt;
    private List<GetDiscountResponse> discounts;
    private List<GetIncrementResponse> increments;
    private Integer boletoDueDays;
    private GetSubscriptionSplitResponse split;

    /**
     * Default constructor.
     */
    public GetSubscriptionResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  code  String value for code.
     * @param  startAt  LocalDateTime value for startAt.
     * @param  interval  String value for interval.
     * @param  intervalCount  int value for intervalCount.
     * @param  billingType  String value for billingType.
     * @param  paymentMethod  String value for paymentMethod.
     * @param  currency  String value for currency.
     * @param  installments  int value for installments.
     * @param  status  String value for status.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  card  GetCardResponse value for card.
     * @param  items  List of GetSubscriptionItemResponse value for items.
     * @param  statementDescriptor  String value for statementDescriptor.
     * @param  metadata  Map of String, value for metadata.
     * @param  setup  GetSetupResponse value for setup.
     * @param  gatewayAffiliationId  String value for gatewayAffiliationId.
     * @param  increments  List of GetIncrementResponse value for increments.
     * @param  split  GetSubscriptionSplitResponse value for split.
     * @param  currentCycle  GetPeriodResponse value for currentCycle.
     * @param  customer  GetCustomerResponse value for customer.
     * @param  nextBillingAt  LocalDateTime value for nextBillingAt.
     * @param  billingDay  Integer value for billingDay.
     * @param  minimumPrice  Integer value for minimumPrice.
     * @param  canceledAt  LocalDateTime value for canceledAt.
     * @param  discounts  List of GetDiscountResponse value for discounts.
     * @param  boletoDueDays  Integer value for boletoDueDays.
     */
    public GetSubscriptionResponse(
            String id,
            String code,
            LocalDateTime startAt,
            String interval,
            int intervalCount,
            String billingType,
            String paymentMethod,
            String currency,
            int installments,
            String status,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            GetCardResponse card,
            List<GetSubscriptionItemResponse> items,
            String statementDescriptor,
            Map<String, String> metadata,
            GetSetupResponse setup,
            String gatewayAffiliationId,
            List<GetIncrementResponse> increments,
            GetSubscriptionSplitResponse split,
            GetPeriodResponse currentCycle,
            GetCustomerResponse customer,
            LocalDateTime nextBillingAt,
            Integer billingDay,
            Integer minimumPrice,
            LocalDateTime canceledAt,
            List<GetDiscountResponse> discounts,
            Integer boletoDueDays) {
        this.id = id;
        this.code = code;
        this.startAt = startAt;
        this.interval = interval;
        this.intervalCount = intervalCount;
        this.billingType = billingType;
        this.currentCycle = currentCycle;
        this.paymentMethod = paymentMethod;
        this.currency = currency;
        this.installments = installments;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.customer = customer;
        this.card = card;
        this.items = items;
        this.statementDescriptor = statementDescriptor;
        this.metadata = metadata;
        this.setup = setup;
        this.gatewayAffiliationId = gatewayAffiliationId;
        this.nextBillingAt = nextBillingAt;
        this.billingDay = billingDay;
        this.minimumPrice = minimumPrice;
        this.canceledAt = canceledAt;
        this.discounts = discounts;
        this.increments = increments;
        this.boletoDueDays = boletoDueDays;
        this.split = split;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for StartAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("start_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getStartAt() {
        return startAt;
    }

    /**
     * Setter for StartAt.
     * @param startAt Value for LocalDateTime
     */
    @JsonSetter("start_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartAt(LocalDateTime startAt) {
        this.startAt = startAt;
    }

    /**
     * Getter for Interval.
     * @return Returns the String
     */
    @JsonGetter("interval")
    public String getInterval() {
        return interval;
    }

    /**
     * Setter for Interval.
     * @param interval Value for String
     */
    @JsonSetter("interval")
    public void setInterval(String interval) {
        this.interval = interval;
    }

    /**
     * Getter for IntervalCount.
     * @return Returns the int
     */
    @JsonGetter("interval_count")
    public int getIntervalCount() {
        return intervalCount;
    }

    /**
     * Setter for IntervalCount.
     * @param intervalCount Value for int
     */
    @JsonSetter("interval_count")
    public void setIntervalCount(int intervalCount) {
        this.intervalCount = intervalCount;
    }

    /**
     * Getter for BillingType.
     * @return Returns the String
     */
    @JsonGetter("billing_type")
    public String getBillingType() {
        return billingType;
    }

    /**
     * Setter for BillingType.
     * @param billingType Value for String
     */
    @JsonSetter("billing_type")
    public void setBillingType(String billingType) {
        this.billingType = billingType;
    }

    /**
     * Getter for CurrentCycle.
     * @return Returns the GetPeriodResponse
     */
    @JsonGetter("current_cycle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetPeriodResponse getCurrentCycle() {
        return currentCycle;
    }

    /**
     * Setter for CurrentCycle.
     * @param currentCycle Value for GetPeriodResponse
     */
    @JsonSetter("current_cycle")
    public void setCurrentCycle(GetPeriodResponse currentCycle) {
        this.currentCycle = currentCycle;
    }

    /**
     * Getter for PaymentMethod.
     * @return Returns the String
     */
    @JsonGetter("payment_method")
    public String getPaymentMethod() {
        return paymentMethod;
    }

    /**
     * Setter for PaymentMethod.
     * @param paymentMethod Value for String
     */
    @JsonSetter("payment_method")
    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = paymentMethod;
    }

    /**
     * Getter for Currency.
     * @return Returns the String
     */
    @JsonGetter("currency")
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for Installments.
     * @return Returns the int
     */
    @JsonGetter("installments")
    public int getInstallments() {
        return installments;
    }

    /**
     * Setter for Installments.
     * @param installments Value for int
     */
    @JsonSetter("installments")
    public void setInstallments(int installments) {
        this.installments = installments;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Customer.
     * @return Returns the GetCustomerResponse
     */
    @JsonGetter("customer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GetCustomerResponse getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * @param customer Value for GetCustomerResponse
     */
    @JsonSetter("customer")
    public void setCustomer(GetCustomerResponse customer) {
        this.customer = customer;
    }

    /**
     * Getter for Card.
     * @return Returns the GetCardResponse
     */
    @JsonGetter("card")
    public GetCardResponse getCard() {
        return card;
    }

    /**
     * Setter for Card.
     * @param card Value for GetCardResponse
     */
    @JsonSetter("card")
    public void setCard(GetCardResponse card) {
        this.card = card;
    }

    /**
     * Getter for Items.
     * @return Returns the List of GetSubscriptionItemResponse
     */
    @JsonGetter("items")
    public List<GetSubscriptionItemResponse> getItems() {
        return items;
    }

    /**
     * Setter for Items.
     * @param items Value for List of GetSubscriptionItemResponse
     */
    @JsonSetter("items")
    public void setItems(List<GetSubscriptionItemResponse> items) {
        this.items = items;
    }

    /**
     * Getter for StatementDescriptor.
     * @return Returns the String
     */
    @JsonGetter("statement_descriptor")
    public String getStatementDescriptor() {
        return statementDescriptor;
    }

    /**
     * Setter for StatementDescriptor.
     * @param statementDescriptor Value for String
     */
    @JsonSetter("statement_descriptor")
    public void setStatementDescriptor(String statementDescriptor) {
        this.statementDescriptor = statementDescriptor;
    }

    /**
     * Getter for Metadata.
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for Setup.
     * @return Returns the GetSetupResponse
     */
    @JsonGetter("setup")
    public GetSetupResponse getSetup() {
        return setup;
    }

    /**
     * Setter for Setup.
     * @param setup Value for GetSetupResponse
     */
    @JsonSetter("setup")
    public void setSetup(GetSetupResponse setup) {
        this.setup = setup;
    }

    /**
     * Getter for GatewayAffiliationId.
     * Affiliation Code
     * @return Returns the String
     */
    @JsonGetter("gateway_affiliation_id")
    public String getGatewayAffiliationId() {
        return gatewayAffiliationId;
    }

    /**
     * Setter for GatewayAffiliationId.
     * Affiliation Code
     * @param gatewayAffiliationId Value for String
     */
    @JsonSetter("gateway_affiliation_id")
    public void setGatewayAffiliationId(String gatewayAffiliationId) {
        this.gatewayAffiliationId = gatewayAffiliationId;
    }

    /**
     * Getter for NextBillingAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("next_billing_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getNextBillingAt() {
        return nextBillingAt;
    }

    /**
     * Setter for NextBillingAt.
     * @param nextBillingAt Value for LocalDateTime
     */
    @JsonSetter("next_billing_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setNextBillingAt(LocalDateTime nextBillingAt) {
        this.nextBillingAt = nextBillingAt;
    }

    /**
     * Getter for BillingDay.
     * @return Returns the Integer
     */
    @JsonGetter("billing_day")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getBillingDay() {
        return billingDay;
    }

    /**
     * Setter for BillingDay.
     * @param billingDay Value for Integer
     */
    @JsonSetter("billing_day")
    public void setBillingDay(Integer billingDay) {
        this.billingDay = billingDay;
    }

    /**
     * Getter for MinimumPrice.
     * @return Returns the Integer
     */
    @JsonGetter("minimum_price")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinimumPrice() {
        return minimumPrice;
    }

    /**
     * Setter for MinimumPrice.
     * @param minimumPrice Value for Integer
     */
    @JsonSetter("minimum_price")
    public void setMinimumPrice(Integer minimumPrice) {
        this.minimumPrice = minimumPrice;
    }

    /**
     * Getter for CanceledAt.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("canceled_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCanceledAt() {
        return canceledAt;
    }

    /**
     * Setter for CanceledAt.
     * @param canceledAt Value for LocalDateTime
     */
    @JsonSetter("canceled_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCanceledAt(LocalDateTime canceledAt) {
        this.canceledAt = canceledAt;
    }

    /**
     * Getter for Discounts.
     * Subscription discounts
     * @return Returns the List of GetDiscountResponse
     */
    @JsonGetter("discounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<GetDiscountResponse> getDiscounts() {
        return discounts;
    }

    /**
     * Setter for Discounts.
     * Subscription discounts
     * @param discounts Value for List of GetDiscountResponse
     */
    @JsonSetter("discounts")
    public void setDiscounts(List<GetDiscountResponse> discounts) {
        this.discounts = discounts;
    }

    /**
     * Getter for Increments.
     * Subscription increments
     * @return Returns the List of GetIncrementResponse
     */
    @JsonGetter("increments")
    public List<GetIncrementResponse> getIncrements() {
        return increments;
    }

    /**
     * Setter for Increments.
     * Subscription increments
     * @param increments Value for List of GetIncrementResponse
     */
    @JsonSetter("increments")
    public void setIncrements(List<GetIncrementResponse> increments) {
        this.increments = increments;
    }

    /**
     * Getter for BoletoDueDays.
     * Days until boleto expires
     * @return Returns the Integer
     */
    @JsonGetter("boleto_due_days")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getBoletoDueDays() {
        return boletoDueDays;
    }

    /**
     * Setter for BoletoDueDays.
     * Days until boleto expires
     * @param boletoDueDays Value for Integer
     */
    @JsonSetter("boleto_due_days")
    public void setBoletoDueDays(Integer boletoDueDays) {
        this.boletoDueDays = boletoDueDays;
    }

    /**
     * Getter for Split.
     * Subscription's split responde
     * @return Returns the GetSubscriptionSplitResponse
     */
    @JsonGetter("split")
    public GetSubscriptionSplitResponse getSplit() {
        return split;
    }

    /**
     * Setter for Split.
     * Subscription's split responde
     * @param split Value for GetSubscriptionSplitResponse
     */
    @JsonSetter("split")
    public void setSplit(GetSubscriptionSplitResponse split) {
        this.split = split;
    }

    /**
     * Converts this GetSubscriptionResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetSubscriptionResponse [" + "id=" + id + ", code=" + code + ", startAt=" + startAt
                + ", interval=" + interval + ", intervalCount=" + intervalCount + ", billingType="
                + billingType + ", paymentMethod=" + paymentMethod + ", currency=" + currency
                + ", installments=" + installments + ", status=" + status + ", createdAt="
                + createdAt + ", updatedAt=" + updatedAt + ", card=" + card + ", items=" + items
                + ", statementDescriptor=" + statementDescriptor + ", metadata=" + metadata
                + ", setup=" + setup + ", gatewayAffiliationId=" + gatewayAffiliationId
                + ", increments=" + increments + ", split=" + split + ", currentCycle="
                + currentCycle + ", customer=" + customer + ", nextBillingAt=" + nextBillingAt
                + ", billingDay=" + billingDay + ", minimumPrice=" + minimumPrice + ", canceledAt="
                + canceledAt + ", discounts=" + discounts + ", boletoDueDays=" + boletoDueDays
                + "]";
    }

    /**
     * Builds a new {@link GetSubscriptionResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetSubscriptionResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, code, startAt, interval, intervalCount, billingType,
                paymentMethod, currency, installments, status, createdAt, updatedAt, card, items,
                statementDescriptor, metadata, setup, gatewayAffiliationId, increments, split)
                .currentCycle(getCurrentCycle())
                .customer(getCustomer())
                .nextBillingAt(getNextBillingAt())
                .billingDay(getBillingDay())
                .minimumPrice(getMinimumPrice())
                .canceledAt(getCanceledAt())
                .discounts(getDiscounts())
                .boletoDueDays(getBoletoDueDays());
        return builder;
    }

    /**
     * Class to build instances of {@link GetSubscriptionResponse}.
     */
    public static class Builder {
        private String id;
        private String code;
        private LocalDateTime startAt;
        private String interval;
        private int intervalCount;
        private String billingType;
        private String paymentMethod;
        private String currency;
        private int installments;
        private String status;
        private LocalDateTime createdAt;
        private LocalDateTime updatedAt;
        private GetCardResponse card;
        private List<GetSubscriptionItemResponse> items;
        private String statementDescriptor;
        private Map<String, String> metadata;
        private GetSetupResponse setup;
        private String gatewayAffiliationId;
        private List<GetIncrementResponse> increments;
        private GetSubscriptionSplitResponse split;
        private GetPeriodResponse currentCycle;
        private GetCustomerResponse customer;
        private LocalDateTime nextBillingAt;
        private Integer billingDay;
        private Integer minimumPrice;
        private LocalDateTime canceledAt;
        private List<GetDiscountResponse> discounts;
        private Integer boletoDueDays;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  code  String value for code.
         * @param  startAt  LocalDateTime value for startAt.
         * @param  interval  String value for interval.
         * @param  intervalCount  int value for intervalCount.
         * @param  billingType  String value for billingType.
         * @param  paymentMethod  String value for paymentMethod.
         * @param  currency  String value for currency.
         * @param  installments  int value for installments.
         * @param  status  String value for status.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @param  card  GetCardResponse value for card.
         * @param  items  List of GetSubscriptionItemResponse value for items.
         * @param  statementDescriptor  String value for statementDescriptor.
         * @param  metadata  Map of String, value for metadata.
         * @param  setup  GetSetupResponse value for setup.
         * @param  gatewayAffiliationId  String value for gatewayAffiliationId.
         * @param  increments  List of GetIncrementResponse value for increments.
         * @param  split  GetSubscriptionSplitResponse value for split.
         */
        public Builder(String id, String code, LocalDateTime startAt, String interval,
                int intervalCount, String billingType, String paymentMethod, String currency,
                int installments, String status, LocalDateTime createdAt, LocalDateTime updatedAt,
                GetCardResponse card, List<GetSubscriptionItemResponse> items,
                String statementDescriptor, Map<String, String> metadata, GetSetupResponse setup,
                String gatewayAffiliationId, List<GetIncrementResponse> increments,
                GetSubscriptionSplitResponse split) {
            this.id = id;
            this.code = code;
            this.startAt = startAt;
            this.interval = interval;
            this.intervalCount = intervalCount;
            this.billingType = billingType;
            this.paymentMethod = paymentMethod;
            this.currency = currency;
            this.installments = installments;
            this.status = status;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.card = card;
            this.items = items;
            this.statementDescriptor = statementDescriptor;
            this.metadata = metadata;
            this.setup = setup;
            this.gatewayAffiliationId = gatewayAffiliationId;
            this.increments = increments;
            this.split = split;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for startAt.
         * @param  startAt  LocalDateTime value for startAt.
         * @return Builder
         */
        public Builder startAt(LocalDateTime startAt) {
            this.startAt = startAt;
            return this;
        }

        /**
         * Setter for interval.
         * @param  interval  String value for interval.
         * @return Builder
         */
        public Builder interval(String interval) {
            this.interval = interval;
            return this;
        }

        /**
         * Setter for intervalCount.
         * @param  intervalCount  int value for intervalCount.
         * @return Builder
         */
        public Builder intervalCount(int intervalCount) {
            this.intervalCount = intervalCount;
            return this;
        }

        /**
         * Setter for billingType.
         * @param  billingType  String value for billingType.
         * @return Builder
         */
        public Builder billingType(String billingType) {
            this.billingType = billingType;
            return this;
        }

        /**
         * Setter for paymentMethod.
         * @param  paymentMethod  String value for paymentMethod.
         * @return Builder
         */
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = paymentMethod;
            return this;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for installments.
         * @param  installments  int value for installments.
         * @return Builder
         */
        public Builder installments(int installments) {
            this.installments = installments;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for card.
         * @param  card  GetCardResponse value for card.
         * @return Builder
         */
        public Builder card(GetCardResponse card) {
            this.card = card;
            return this;
        }

        /**
         * Setter for items.
         * @param  items  List of GetSubscriptionItemResponse value for items.
         * @return Builder
         */
        public Builder items(List<GetSubscriptionItemResponse> items) {
            this.items = items;
            return this;
        }

        /**
         * Setter for statementDescriptor.
         * @param  statementDescriptor  String value for statementDescriptor.
         * @return Builder
         */
        public Builder statementDescriptor(String statementDescriptor) {
            this.statementDescriptor = statementDescriptor;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for setup.
         * @param  setup  GetSetupResponse value for setup.
         * @return Builder
         */
        public Builder setup(GetSetupResponse setup) {
            this.setup = setup;
            return this;
        }

        /**
         * Setter for gatewayAffiliationId.
         * @param  gatewayAffiliationId  String value for gatewayAffiliationId.
         * @return Builder
         */
        public Builder gatewayAffiliationId(String gatewayAffiliationId) {
            this.gatewayAffiliationId = gatewayAffiliationId;
            return this;
        }

        /**
         * Setter for increments.
         * @param  increments  List of GetIncrementResponse value for increments.
         * @return Builder
         */
        public Builder increments(List<GetIncrementResponse> increments) {
            this.increments = increments;
            return this;
        }

        /**
         * Setter for split.
         * @param  split  GetSubscriptionSplitResponse value for split.
         * @return Builder
         */
        public Builder split(GetSubscriptionSplitResponse split) {
            this.split = split;
            return this;
        }

        /**
         * Setter for currentCycle.
         * @param  currentCycle  GetPeriodResponse value for currentCycle.
         * @return Builder
         */
        public Builder currentCycle(GetPeriodResponse currentCycle) {
            this.currentCycle = currentCycle;
            return this;
        }

        /**
         * Setter for customer.
         * @param  customer  GetCustomerResponse value for customer.
         * @return Builder
         */
        public Builder customer(GetCustomerResponse customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for nextBillingAt.
         * @param  nextBillingAt  LocalDateTime value for nextBillingAt.
         * @return Builder
         */
        public Builder nextBillingAt(LocalDateTime nextBillingAt) {
            this.nextBillingAt = nextBillingAt;
            return this;
        }

        /**
         * Setter for billingDay.
         * @param  billingDay  Integer value for billingDay.
         * @return Builder
         */
        public Builder billingDay(Integer billingDay) {
            this.billingDay = billingDay;
            return this;
        }

        /**
         * Setter for minimumPrice.
         * @param  minimumPrice  Integer value for minimumPrice.
         * @return Builder
         */
        public Builder minimumPrice(Integer minimumPrice) {
            this.minimumPrice = minimumPrice;
            return this;
        }

        /**
         * Setter for canceledAt.
         * @param  canceledAt  LocalDateTime value for canceledAt.
         * @return Builder
         */
        public Builder canceledAt(LocalDateTime canceledAt) {
            this.canceledAt = canceledAt;
            return this;
        }

        /**
         * Setter for discounts.
         * @param  discounts  List of GetDiscountResponse value for discounts.
         * @return Builder
         */
        public Builder discounts(List<GetDiscountResponse> discounts) {
            this.discounts = discounts;
            return this;
        }

        /**
         * Setter for boletoDueDays.
         * @param  boletoDueDays  Integer value for boletoDueDays.
         * @return Builder
         */
        public Builder boletoDueDays(Integer boletoDueDays) {
            this.boletoDueDays = boletoDueDays;
            return this;
        }

        /**
         * Builds a new {@link GetSubscriptionResponse} object using the set fields.
         * @return {@link GetSubscriptionResponse}
         */
        public GetSubscriptionResponse build() {
            return new GetSubscriptionResponse(id, code, startAt, interval, intervalCount,
                    billingType, paymentMethod, currency, installments, status, createdAt,
                    updatedAt, card, items, statementDescriptor, metadata, setup,
                    gatewayAffiliationId, increments, split, currentCycle, customer, nextBillingAt,
                    billingDay, minimumPrice, canceledAt, discounts, boletoDueDays);
        }
    }
}
