/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import java.time.LocalDateTime;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for CreateChargeRequest type.
 */
public class CreateChargeRequest {
    private String code;
    private int amount;
    private String customerId;
    private CreateCustomerRequest customer;
    private CreatePaymentRequest payment;
    private Map<String, String> metadata;
    private LocalDateTime dueAt;
    private CreateAntifraudRequest antifraud;
    private String orderId;

    /**
     * Default constructor.
     */
    public CreateChargeRequest() {
    }

    /**
     * Initialization constructor.
     * @param  code  String value for code.
     * @param  amount  int value for amount.
     * @param  customerId  String value for customerId.
     * @param  customer  CreateCustomerRequest value for customer.
     * @param  payment  CreatePaymentRequest value for payment.
     * @param  metadata  Map of String, value for metadata.
     * @param  antifraud  CreateAntifraudRequest value for antifraud.
     * @param  orderId  String value for orderId.
     * @param  dueAt  LocalDateTime value for dueAt.
     */
    public CreateChargeRequest(
            String code,
            int amount,
            String customerId,
            CreateCustomerRequest customer,
            CreatePaymentRequest payment,
            Map<String, String> metadata,
            CreateAntifraudRequest antifraud,
            String orderId,
            LocalDateTime dueAt) {
        this.code = code;
        this.amount = amount;
        this.customerId = customerId;
        this.customer = customer;
        this.payment = payment;
        this.metadata = metadata;
        this.dueAt = dueAt;
        this.antifraud = antifraud;
        this.orderId = orderId;
    }

    /**
     * Getter for Code.
     * Code
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Amount.
     * The amount of the charge, in cents
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * The amount of the charge, in cents
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Getter for CustomerId.
     * The customer's id
     * @return Returns the String
     */
    @JsonGetter("customer_id")
    public String getCustomerId() {
        return customerId;
    }

    /**
     * Setter for CustomerId.
     * The customer's id
     * @param customerId Value for String
     */
    @JsonSetter("customer_id")
    public void setCustomerId(String customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for Customer.
     * Customer data
     * @return Returns the CreateCustomerRequest
     */
    @JsonGetter("customer")
    public CreateCustomerRequest getCustomer() {
        return customer;
    }

    /**
     * Setter for Customer.
     * Customer data
     * @param customer Value for CreateCustomerRequest
     */
    @JsonSetter("customer")
    public void setCustomer(CreateCustomerRequest customer) {
        this.customer = customer;
    }

    /**
     * Getter for Payment.
     * Payment data
     * @return Returns the CreatePaymentRequest
     */
    @JsonGetter("payment")
    public CreatePaymentRequest getPayment() {
        return payment;
    }

    /**
     * Setter for Payment.
     * Payment data
     * @param payment Value for CreatePaymentRequest
     */
    @JsonSetter("payment")
    public void setPayment(CreatePaymentRequest payment) {
        this.payment = payment;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    @JsonGetter("metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for DueAt.
     * The charge due date
     * @return Returns the LocalDateTime
     */
    @JsonGetter("due_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDueAt() {
        return dueAt;
    }

    /**
     * Setter for DueAt.
     * The charge due date
     * @param dueAt Value for LocalDateTime
     */
    @JsonSetter("due_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDueAt(LocalDateTime dueAt) {
        this.dueAt = dueAt;
    }

    /**
     * Getter for Antifraud.
     * @return Returns the CreateAntifraudRequest
     */
    @JsonGetter("antifraud")
    public CreateAntifraudRequest getAntifraud() {
        return antifraud;
    }

    /**
     * Setter for Antifraud.
     * @param antifraud Value for CreateAntifraudRequest
     */
    @JsonSetter("antifraud")
    public void setAntifraud(CreateAntifraudRequest antifraud) {
        this.antifraud = antifraud;
    }

    /**
     * Getter for OrderId.
     * Order Id
     * @return Returns the String
     */
    @JsonGetter("order_id")
    public String getOrderId() {
        return orderId;
    }

    /**
     * Setter for OrderId.
     * Order Id
     * @param orderId Value for String
     */
    @JsonSetter("order_id")
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Converts this CreateChargeRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateChargeRequest [" + "code=" + code + ", amount=" + amount + ", customerId="
                + customerId + ", customer=" + customer + ", payment=" + payment + ", metadata="
                + metadata + ", antifraud=" + antifraud + ", orderId=" + orderId + ", dueAt="
                + dueAt + "]";
    }

    /**
     * Builds a new {@link CreateChargeRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateChargeRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(code, amount, customerId, customer, payment, metadata,
                antifraud, orderId)
                .dueAt(getDueAt());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateChargeRequest}.
     */
    public static class Builder {
        private String code;
        private int amount;
        private String customerId;
        private CreateCustomerRequest customer;
        private CreatePaymentRequest payment;
        private Map<String, String> metadata;
        private CreateAntifraudRequest antifraud;
        private String orderId;
        private LocalDateTime dueAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  code  String value for code.
         * @param  amount  int value for amount.
         * @param  customerId  String value for customerId.
         * @param  customer  CreateCustomerRequest value for customer.
         * @param  payment  CreatePaymentRequest value for payment.
         * @param  metadata  Map of String, value for metadata.
         * @param  antifraud  CreateAntifraudRequest value for antifraud.
         * @param  orderId  String value for orderId.
         */
        public Builder(String code, int amount, String customerId, CreateCustomerRequest customer,
                CreatePaymentRequest payment, Map<String, String> metadata,
                CreateAntifraudRequest antifraud, String orderId) {
            this.code = code;
            this.amount = amount;
            this.customerId = customerId;
            this.customer = customer;
            this.payment = payment;
            this.metadata = metadata;
            this.antifraud = antifraud;
            this.orderId = orderId;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  String value for customerId.
         * @return Builder
         */
        public Builder customerId(String customerId) {
            this.customerId = customerId;
            return this;
        }

        /**
         * Setter for customer.
         * @param  customer  CreateCustomerRequest value for customer.
         * @return Builder
         */
        public Builder customer(CreateCustomerRequest customer) {
            this.customer = customer;
            return this;
        }

        /**
         * Setter for payment.
         * @param  payment  CreatePaymentRequest value for payment.
         * @return Builder
         */
        public Builder payment(CreatePaymentRequest payment) {
            this.payment = payment;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for antifraud.
         * @param  antifraud  CreateAntifraudRequest value for antifraud.
         * @return Builder
         */
        public Builder antifraud(CreateAntifraudRequest antifraud) {
            this.antifraud = antifraud;
            return this;
        }

        /**
         * Setter for orderId.
         * @param  orderId  String value for orderId.
         * @return Builder
         */
        public Builder orderId(String orderId) {
            this.orderId = orderId;
            return this;
        }

        /**
         * Setter for dueAt.
         * @param  dueAt  LocalDateTime value for dueAt.
         * @return Builder
         */
        public Builder dueAt(LocalDateTime dueAt) {
            this.dueAt = dueAt;
            return this;
        }

        /**
         * Builds a new {@link CreateChargeRequest} object using the set fields.
         * @return {@link CreateChargeRequest}
         */
        public CreateChargeRequest build() {
            return new CreateChargeRequest(code, amount, customerId, customer, payment, metadata,
                    antifraud, orderId, dueAt);
        }
    }
}
