/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for CreateCardPaymentContactlessRequest type.
 */
public class CreateCardPaymentContactlessRequest {
    private String type;
    private CreateApplePayRequest applePay;
    private CreateGooglePayRequest googlePay;
    private CreateEmvDecryptRequest emv;

    /**
     * Default constructor.
     */
    public CreateCardPaymentContactlessRequest() {
    }

    /**
     * Initialization constructor.
     * @param  type  String value for type.
     * @param  applePay  CreateApplePayRequest value for applePay.
     * @param  googlePay  CreateGooglePayRequest value for googlePay.
     * @param  emv  CreateEmvDecryptRequest value for emv.
     */
    public CreateCardPaymentContactlessRequest(
            String type,
            CreateApplePayRequest applePay,
            CreateGooglePayRequest googlePay,
            CreateEmvDecryptRequest emv) {
        this.type = type;
        this.applePay = applePay;
        this.googlePay = googlePay;
        this.emv = emv;
    }

    /**
     * Getter for Type.
     * The authentication type
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The authentication type
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for ApplePay.
     * The ApplePay encrypted request
     * @return Returns the CreateApplePayRequest
     */
    @JsonGetter("apple_pay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateApplePayRequest getApplePay() {
        return applePay;
    }

    /**
     * Setter for ApplePay.
     * The ApplePay encrypted request
     * @param applePay Value for CreateApplePayRequest
     */
    @JsonSetter("apple_pay")
    public void setApplePay(CreateApplePayRequest applePay) {
        this.applePay = applePay;
    }

    /**
     * Getter for GooglePay.
     * The GooglePay encrypted request
     * @return Returns the CreateGooglePayRequest
     */
    @JsonGetter("google_pay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateGooglePayRequest getGooglePay() {
        return googlePay;
    }

    /**
     * Setter for GooglePay.
     * The GooglePay encrypted request
     * @param googlePay Value for CreateGooglePayRequest
     */
    @JsonSetter("google_pay")
    public void setGooglePay(CreateGooglePayRequest googlePay) {
        this.googlePay = googlePay;
    }

    /**
     * Getter for Emv.
     * The Emv encrypted request
     * @return Returns the CreateEmvDecryptRequest
     */
    @JsonGetter("emv")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreateEmvDecryptRequest getEmv() {
        return emv;
    }

    /**
     * Setter for Emv.
     * The Emv encrypted request
     * @param emv Value for CreateEmvDecryptRequest
     */
    @JsonSetter("emv")
    public void setEmv(CreateEmvDecryptRequest emv) {
        this.emv = emv;
    }

    /**
     * Converts this CreateCardPaymentContactlessRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateCardPaymentContactlessRequest [" + "type=" + type + ", applePay=" + applePay
                + ", googlePay=" + googlePay + ", emv=" + emv + "]";
    }

    /**
     * Builds a new {@link CreateCardPaymentContactlessRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateCardPaymentContactlessRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(type)
                .applePay(getApplePay())
                .googlePay(getGooglePay())
                .emv(getEmv());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateCardPaymentContactlessRequest}.
     */
    public static class Builder {
        private String type;
        private CreateApplePayRequest applePay;
        private CreateGooglePayRequest googlePay;
        private CreateEmvDecryptRequest emv;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  type  String value for type.
         */
        public Builder(String type) {
            this.type = type;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for applePay.
         * @param  applePay  CreateApplePayRequest value for applePay.
         * @return Builder
         */
        public Builder applePay(CreateApplePayRequest applePay) {
            this.applePay = applePay;
            return this;
        }

        /**
         * Setter for googlePay.
         * @param  googlePay  CreateGooglePayRequest value for googlePay.
         * @return Builder
         */
        public Builder googlePay(CreateGooglePayRequest googlePay) {
            this.googlePay = googlePay;
            return this;
        }

        /**
         * Setter for emv.
         * @param  emv  CreateEmvDecryptRequest value for emv.
         * @return Builder
         */
        public Builder emv(CreateEmvDecryptRequest emv) {
            this.emv = emv;
            return this;
        }

        /**
         * Builds a new {@link CreateCardPaymentContactlessRequest} object using the set fields.
         * @return {@link CreateCardPaymentContactlessRequest}
         */
        public CreateCardPaymentContactlessRequest build() {
            return new CreateCardPaymentContactlessRequest(type, applePay, googlePay, emv);
        }
    }
}
