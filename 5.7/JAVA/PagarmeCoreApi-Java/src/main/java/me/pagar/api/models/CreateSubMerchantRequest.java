/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;

/**
 * This is a model class for CreateSubMerchantRequest type.
 */
public class CreateSubMerchantRequest {
    private String paymentFacilitatorCode;
    private String code;
    private String name;
    private String merchantCategoryCode;
    private String document;
    private String type;
    private CreatePhoneRequest phone;
    private CreateAddressRequest address;

    /**
     * Default constructor.
     */
    public CreateSubMerchantRequest() {
    }

    /**
     * Initialization constructor.
     * @param  paymentFacilitatorCode  String value for paymentFacilitatorCode.
     * @param  code  String value for code.
     * @param  name  String value for name.
     * @param  merchantCategoryCode  String value for merchantCategoryCode.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  phone  CreatePhoneRequest value for phone.
     * @param  address  CreateAddressRequest value for address.
     */
    public CreateSubMerchantRequest(
            String paymentFacilitatorCode,
            String code,
            String name,
            String merchantCategoryCode,
            String document,
            String type,
            CreatePhoneRequest phone,
            CreateAddressRequest address) {
        this.paymentFacilitatorCode = paymentFacilitatorCode;
        this.code = code;
        this.name = name;
        this.merchantCategoryCode = merchantCategoryCode;
        this.document = document;
        this.type = type;
        this.phone = phone;
        this.address = address;
    }

    /**
     * Getter for PaymentFacilitatorCode.
     * Payment Facilitator Code
     * @return Returns the String
     */
    @JsonGetter("payment_facilitator_code")
    public String getPaymentFacilitatorCode() {
        return paymentFacilitatorCode;
    }

    /**
     * Setter for PaymentFacilitatorCode.
     * Payment Facilitator Code
     * @param paymentFacilitatorCode Value for String
     */
    @JsonSetter("payment_facilitator_code")
    public void setPaymentFacilitatorCode(String paymentFacilitatorCode) {
        this.paymentFacilitatorCode = paymentFacilitatorCode;
    }

    /**
     * Getter for Code.
     * Code
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * Code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Name.
     * Name
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for MerchantCategoryCode.
     * Merchant Category Code
     * @return Returns the String
     */
    @JsonGetter("merchant_category_code")
    public String getMerchantCategoryCode() {
        return merchantCategoryCode;
    }

    /**
     * Setter for MerchantCategoryCode.
     * Merchant Category Code
     * @param merchantCategoryCode Value for String
     */
    @JsonSetter("merchant_category_code")
    public void setMerchantCategoryCode(String merchantCategoryCode) {
        this.merchantCategoryCode = merchantCategoryCode;
    }

    /**
     * Getter for Document.
     * Document number. Only numbers, no special characters.
     * @return Returns the String
     */
    @JsonGetter("document")
    public String getDocument() {
        return document;
    }

    /**
     * Setter for Document.
     * Document number. Only numbers, no special characters.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = document;
    }

    /**
     * Getter for Type.
     * Document type. Can be either 'individual' or 'company'
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * Document type. Can be either 'individual' or 'company'
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Phone.
     * Phone
     * @return Returns the CreatePhoneRequest
     */
    @JsonGetter("phone")
    public CreatePhoneRequest getPhone() {
        return phone;
    }

    /**
     * Setter for Phone.
     * Phone
     * @param phone Value for CreatePhoneRequest
     */
    @JsonSetter("phone")
    public void setPhone(CreatePhoneRequest phone) {
        this.phone = phone;
    }

    /**
     * Getter for Address.
     * Address
     * @return Returns the CreateAddressRequest
     */
    @JsonGetter("address")
    public CreateAddressRequest getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * Address
     * @param address Value for CreateAddressRequest
     */
    @JsonSetter("address")
    public void setAddress(CreateAddressRequest address) {
        this.address = address;
    }

    /**
     * Converts this CreateSubMerchantRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateSubMerchantRequest [" + "paymentFacilitatorCode=" + paymentFacilitatorCode
                + ", code=" + code + ", name=" + name + ", merchantCategoryCode="
                + merchantCategoryCode + ", document=" + document + ", type=" + type + ", phone="
                + phone + ", address=" + address + "]";
    }

    /**
     * Builds a new {@link CreateSubMerchantRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateSubMerchantRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(paymentFacilitatorCode, code, name, merchantCategoryCode,
                document, type, phone, address);
        return builder;
    }

    /**
     * Class to build instances of {@link CreateSubMerchantRequest}.
     */
    public static class Builder {
        private String paymentFacilitatorCode;
        private String code;
        private String name;
        private String merchantCategoryCode;
        private String document;
        private String type;
        private CreatePhoneRequest phone;
        private CreateAddressRequest address;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  paymentFacilitatorCode  String value for paymentFacilitatorCode.
         * @param  code  String value for code.
         * @param  name  String value for name.
         * @param  merchantCategoryCode  String value for merchantCategoryCode.
         * @param  document  String value for document.
         * @param  type  String value for type.
         * @param  phone  CreatePhoneRequest value for phone.
         * @param  address  CreateAddressRequest value for address.
         */
        public Builder(String paymentFacilitatorCode, String code, String name,
                String merchantCategoryCode, String document, String type, CreatePhoneRequest phone,
                CreateAddressRequest address) {
            this.paymentFacilitatorCode = paymentFacilitatorCode;
            this.code = code;
            this.name = name;
            this.merchantCategoryCode = merchantCategoryCode;
            this.document = document;
            this.type = type;
            this.phone = phone;
            this.address = address;
        }

        /**
         * Setter for paymentFacilitatorCode.
         * @param  paymentFacilitatorCode  String value for paymentFacilitatorCode.
         * @return Builder
         */
        public Builder paymentFacilitatorCode(String paymentFacilitatorCode) {
            this.paymentFacilitatorCode = paymentFacilitatorCode;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for merchantCategoryCode.
         * @param  merchantCategoryCode  String value for merchantCategoryCode.
         * @return Builder
         */
        public Builder merchantCategoryCode(String merchantCategoryCode) {
            this.merchantCategoryCode = merchantCategoryCode;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = document;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for phone.
         * @param  phone  CreatePhoneRequest value for phone.
         * @return Builder
         */
        public Builder phone(CreatePhoneRequest phone) {
            this.phone = phone;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  CreateAddressRequest value for address.
         * @return Builder
         */
        public Builder address(CreateAddressRequest address) {
            this.address = address;
            return this;
        }

        /**
         * Builds a new {@link CreateSubMerchantRequest} object using the set fields.
         * @return {@link CreateSubMerchantRequest}
         */
        public CreateSubMerchantRequest build() {
            return new CreateSubMerchantRequest(paymentFacilitatorCode, code, name,
                    merchantCategoryCode, document, type, phone, address);
        }
    }
}
