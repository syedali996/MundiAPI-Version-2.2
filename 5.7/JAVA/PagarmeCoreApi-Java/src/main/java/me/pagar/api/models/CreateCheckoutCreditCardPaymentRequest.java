/*
 * PagarmeCoreApiLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.BaseModel;
import java.util.List;

/**
 * This is a model class for CreateCheckoutCreditCardPaymentRequest type.
 */
public class CreateCheckoutCreditCardPaymentRequest {
    private String statementDescriptor;
    private List<CreateCheckoutCardInstallmentOptionRequest> installments;
    private CreatePaymentAuthenticationRequest authentication;
    private Boolean capture;

    /**
     * Default constructor.
     */
    public CreateCheckoutCreditCardPaymentRequest() {
    }

    /**
     * Initialization constructor.
     * @param  statementDescriptor  String value for statementDescriptor.
     * @param  installments  List of CreateCheckoutCardInstallmentOptionRequest value for
     *         installments.
     * @param  authentication  CreatePaymentAuthenticationRequest value for authentication.
     * @param  capture  Boolean value for capture.
     */
    public CreateCheckoutCreditCardPaymentRequest(
            String statementDescriptor,
            List<CreateCheckoutCardInstallmentOptionRequest> installments,
            CreatePaymentAuthenticationRequest authentication,
            Boolean capture) {
        this.statementDescriptor = statementDescriptor;
        this.installments = installments;
        this.authentication = authentication;
        this.capture = capture;
    }

    /**
     * Getter for StatementDescriptor.
     * Card invoice text descriptor
     * @return Returns the String
     */
    @JsonGetter("statement_descriptor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStatementDescriptor() {
        return statementDescriptor;
    }

    /**
     * Setter for StatementDescriptor.
     * Card invoice text descriptor
     * @param statementDescriptor Value for String
     */
    @JsonSetter("statement_descriptor")
    public void setStatementDescriptor(String statementDescriptor) {
        this.statementDescriptor = statementDescriptor;
    }

    /**
     * Getter for Installments.
     * Payment installment options
     * @return Returns the List of CreateCheckoutCardInstallmentOptionRequest
     */
    @JsonGetter("installments")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CreateCheckoutCardInstallmentOptionRequest> getInstallments() {
        return installments;
    }

    /**
     * Setter for Installments.
     * Payment installment options
     * @param installments Value for List of CreateCheckoutCardInstallmentOptionRequest
     */
    @JsonSetter("installments")
    public void setInstallments(List<CreateCheckoutCardInstallmentOptionRequest> installments) {
        this.installments = installments;
    }

    /**
     * Getter for Authentication.
     * Creates payment authentication
     * @return Returns the CreatePaymentAuthenticationRequest
     */
    @JsonGetter("authentication")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public CreatePaymentAuthenticationRequest getAuthentication() {
        return authentication;
    }

    /**
     * Setter for Authentication.
     * Creates payment authentication
     * @param authentication Value for CreatePaymentAuthenticationRequest
     */
    @JsonSetter("authentication")
    public void setAuthentication(CreatePaymentAuthenticationRequest authentication) {
        this.authentication = authentication;
    }

    /**
     * Getter for Capture.
     * Authorize and capture?
     * @return Returns the Boolean
     */
    @JsonGetter("capture")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getCapture() {
        return capture;
    }

    /**
     * Setter for Capture.
     * Authorize and capture?
     * @param capture Value for Boolean
     */
    @JsonSetter("capture")
    public void setCapture(Boolean capture) {
        this.capture = capture;
    }

    /**
     * Converts this CreateCheckoutCreditCardPaymentRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateCheckoutCreditCardPaymentRequest [" + "statementDescriptor="
                + statementDescriptor + ", installments=" + installments + ", authentication="
                + authentication + ", capture=" + capture + "]";
    }

    /**
     * Builds a new {@link CreateCheckoutCreditCardPaymentRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateCheckoutCreditCardPaymentRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .statementDescriptor(getStatementDescriptor())
                .installments(getInstallments())
                .authentication(getAuthentication())
                .capture(getCapture());
        return builder;
    }

    /**
     * Class to build instances of {@link CreateCheckoutCreditCardPaymentRequest}.
     */
    public static class Builder {
        private String statementDescriptor;
        private List<CreateCheckoutCardInstallmentOptionRequest> installments;
        private CreatePaymentAuthenticationRequest authentication;
        private Boolean capture;



        /**
         * Setter for statementDescriptor.
         * @param  statementDescriptor  String value for statementDescriptor.
         * @return Builder
         */
        public Builder statementDescriptor(String statementDescriptor) {
            this.statementDescriptor = statementDescriptor;
            return this;
        }

        /**
         * Setter for installments.
         * @param  installments  List of CreateCheckoutCardInstallmentOptionRequest value for
         *         installments.
         * @return Builder
         */
        public Builder installments(
                List<CreateCheckoutCardInstallmentOptionRequest> installments) {
            this.installments = installments;
            return this;
        }

        /**
         * Setter for authentication.
         * @param  authentication  CreatePaymentAuthenticationRequest value for authentication.
         * @return Builder
         */
        public Builder authentication(CreatePaymentAuthenticationRequest authentication) {
            this.authentication = authentication;
            return this;
        }

        /**
         * Setter for capture.
         * @param  capture  Boolean value for capture.
         * @return Builder
         */
        public Builder capture(Boolean capture) {
            this.capture = capture;
            return this;
        }

        /**
         * Builds a new {@link CreateCheckoutCreditCardPaymentRequest} object using the set fields.
         * @return {@link CreateCheckoutCreditCardPaymentRequest}
         */
        public CreateCheckoutCreditCardPaymentRequest build() {
            return new CreateCheckoutCreditCardPaymentRequest(statementDescriptor, installments,
                    authentication, capture);
        }
    }
}
